[gd_scene load_steps=32 format=3 uid="uid://bvymvvotbov41"]

[ext_resource type="Texture2D" uid="uid://dqbi36m2q5bb4" path="res://Assets/Tileset.png" id="1_jj2hn"]
[ext_resource type="PackedScene" uid="uid://b3t2mpsrlclj1" path="res://Instances/Gameobjects/Platforms/NormalPlatform.tscn" id="2_bkqre"]
[ext_resource type="PackedScene" uid="uid://jlg4pvnpuc7i" path="res://Instances/Gameobjects/Platforms/MovingPlatform.tscn" id="3_sj8q7"]
[ext_resource type="PackedScene" uid="uid://c7s6ybr43gk6l" path="res://Instances/Gameobjects/Movable Objects/Box.tscn" id="5_wi1df"]
[ext_resource type="PackedScene" uid="uid://do5cdmcaycbhc" path="res://Instances/Gameobjects/Gravityfields/Gravityfield_Normal.tscn" id="6_ot4hf"]
[ext_resource type="PackedScene" uid="uid://b117q2ya6dts7" path="res://Instances/Gameobjects/Gravityfields/Gravityfield_Time.tscn" id="7_vr5mk"]
[ext_resource type="PackedScene" uid="uid://rfnsqa1150ea" path="res://Instances/Gameobjects/Gravityfields/Gravityfield_Toggle.tscn" id="8_i08wq"]
[ext_resource type="PackedScene" uid="uid://mb5aisolynk5" path="res://Instances/Gameobjects/Platforms/JumpPad.tscn" id="9_3ixdi"]
[ext_resource type="PackedScene" uid="uid://dt56jo4o7i0hw" path="res://Instances/Gameobjects/Portals/Portals.tscn" id="10_xwke7"]
[ext_resource type="PackedScene" uid="uid://oj3xa6mp45cx" path="res://Instances/Gameobjects/Traps and Checkpoints/Checkpoint.tscn" id="11_l85ei"]
[ext_resource type="PackedScene" uid="uid://xjog32y8jj7h" path="res://Dillon/character_body_2d.tscn" id="12_oyuft"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_2e4j6"]
texture = ExtResource("1_jj2hn")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:0/size_in_atlas = Vector2i(2, 2)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
6:0/size_in_atlas = Vector2i(4, 4)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
10:0/size_in_atlas = Vector2i(4, 4)
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/z_index = 1
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
2:0/size_in_atlas = Vector2i(2, 2)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_32w8q"]
physics_layer_0/collision_layer = 1
sources/1 = SubResource("TileSetAtlasSource_2e4j6")

[sub_resource type="Gradient" id="Gradient_hmh3d"]
offsets = PackedFloat32Array(0, 0.0852941, 0.844118)
colors = PackedColorArray(1, 1, 1, 0, 0.611765, 0.784314, 0.862745, 0, 0.0352941, 0.462745, 0.662745, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_tqo22"]
resource_local_to_scene = true
gradient = SubResource("Gradient_hmh3d")
width = 8
height = 16
fill_from = Vector2(0, 0.0042735)

[sub_resource type="Animation" id="Animation_kgtk0"]
resource_name = "Move"
length = 10.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 3, 5, 8, 10),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(-63, -26), Vector2(-63, -26), Vector2(50, -76), Vector2(50, -76), Vector2(-63, -26)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_wdbp8"]
_data = {
"Move": SubResource("Animation_kgtk0")
}

[sub_resource type="GradientTexture2D" id="GradientTexture2D_5afbk"]
resource_local_to_scene = true
gradient = SubResource("Gradient_hmh3d")
width = 8
height = 16
fill_from = Vector2(0, 0.0042735)

[sub_resource type="Animation" id="Animation_ig103"]
resource_name = "Move"
length = 10.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 3, 5, 8, 10),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(40, -101), Vector2(40, -101), Vector2(-89, -101), Vector2(-89, -101), Vector2(40, -101)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_mpaml"]
_data = {
"Move": SubResource("Animation_ig103")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_vpx1o"]
resource_local_to_scene = true
size = Vector2(50, 50)

[sub_resource type="Shader" id="Shader_s4k2c"]
code = "shader_type canvas_item;

uniform float width : hint_range(10, 1000) = 30;
uniform float height : hint_range(10, 1000) = 30;
uniform vec3 particle_color : source_color;
uniform vec4 background_color : source_color;
uniform float particle_size : hint_range(0.0, 1.0) = 0.2;
uniform float particle_rotation_speed : hint_range(0.0, 10.0) = 5;

uniform vec2 direction;
uniform float strength : hint_range(0.0, 10.0) = 0.5;
uniform int quality = 2;
uniform bool pause = false;

void vertex(){
	vec2 blurSize = abs(direction) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows, float time) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			if (!pause) {
				float random = fract(sin(point.x + 78.233) * 43758.5453123) - 0.5;
				float rot_direction = random / abs(random);
				// sin(x * 𝜋 / 3) + sin(x * 𝜋)
				point = vec2(
					cos(rot_direction * time * point.x * particle_rotation_speed / 3.0) + cos(rot_direction * time * point.x * particle_rotation_speed),
					sin(rot_direction * time * point.y * particle_rotation_speed / 3.0) + sin(rot_direction * time * point.y * particle_rotation_speed)
				) * 0.5 + 0.5;
			}
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

vec4 run_worley(vec2 uv) {
	float worley = worley(uv + direction * TIME * (pause ? 0.0 : strength), width, height, TIME);
	return vec4(particle_color, step(1.0 - particle_size, 1.0-worley) * (1.0-worley));
}

void fragment() {
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = run_worley(UV) * inSquare;
	if (!pause) {
		vec2 stepSize = direction/(float(quality)) / 50.0 * strength;
		vec2 uv;
		for(int i = 1; i <= quality; i++){
			uv = UV + stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
			
			uv = UV - stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
		}
		COLOR.rgb /= numSamples;
		COLOR.a /= float(quality)*2.0 + 1.0;
	}
	if (
		COLOR.a == 0.0 &&
		UV.x >= 0.0 &&
		UV.x <= 1.0 &&
		UV.y >= 0.0 &&
		UV.y <= 1.0
	) {
		COLOR = background_color;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_w4st0"]
shader = SubResource("Shader_s4k2c")
shader_parameter/width = 50.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.486275, 0.988235, 0, 1)
shader_parameter/background_color = Color(0, 0.854902, 0, 0.137255)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(0, 1)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = false

[sub_resource type="RectangleShape2D" id="RectangleShape2D_qt8sq"]
resource_local_to_scene = true
size = Vector2(50, 50)

[sub_resource type="Shader" id="Shader_xo56k"]
code = "shader_type canvas_item;

uniform float width : hint_range(10, 1000) = 30;
uniform float height : hint_range(10, 1000) = 30;
uniform vec3 particle_color : source_color;
uniform vec4 background_color : source_color;
uniform float particle_size : hint_range(0.0, 1.0) = 0.2;
uniform float particle_rotation_speed : hint_range(0.0, 10.0) = 5;

uniform vec2 direction;
uniform float strength : hint_range(0.0, 10.0) = 0.5;
uniform int quality = 2;
uniform bool pause = false;

void vertex(){
	vec2 blurSize = abs(direction) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows, float time) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			if (!pause) {
				float random = fract(sin(point.x + 78.233) * 43758.5453123) - 0.5;
				float rot_direction = random / abs(random);
				// sin(x * 𝜋 / 3) + sin(x * 𝜋)
				point = vec2(
					cos(rot_direction * time * point.x * particle_rotation_speed / 3.0) + cos(rot_direction * time * point.x * particle_rotation_speed),
					sin(rot_direction * time * point.y * particle_rotation_speed / 3.0) + sin(rot_direction * time * point.y * particle_rotation_speed)
				) * 0.5 + 0.5;
			}
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

vec4 run_worley(vec2 uv) {
	float worley = worley(uv + direction * TIME * (pause ? 0.0 : strength), width, height, TIME);
	return vec4(particle_color, step(1.0 - particle_size, 1.0-worley) * (1.0-worley));
}

void fragment() {
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = run_worley(UV) * inSquare;
	if (!pause) {
		vec2 stepSize = direction/(float(quality)) / 50.0 * strength;
		vec2 uv;
		for(int i = 1; i <= quality; i++){
			uv = UV + stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
			
			uv = UV - stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
		}
		COLOR.rgb /= numSamples;
		COLOR.a /= float(quality)*2.0 + 1.0;
	}
	if (
		COLOR.a == 0.0 &&
		UV.x >= 0.0 &&
		UV.x <= 1.0 &&
		UV.y >= 0.0 &&
		UV.y <= 1.0
	) {
		COLOR = background_color;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cm6gq"]
resource_local_to_scene = true
shader = SubResource("Shader_xo56k")
shader_parameter/width = 50.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.701961, 0.701961, 0, 1)
shader_parameter/background_color = Color(0.992157, 0.854902, 0, 0.156863)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(-0.593199, 0.805056)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = false

[sub_resource type="RectangleShape2D" id="RectangleShape2D_c7464"]
resource_local_to_scene = true
size = Vector2(50, 50)

[sub_resource type="Shader" id="Shader_h68oi"]
code = "shader_type canvas_item;

uniform float width : hint_range(10, 1000) = 30;
uniform float height : hint_range(10, 1000) = 30;
uniform vec3 particle_color : source_color;
uniform vec4 background_color : source_color;
uniform float particle_size : hint_range(0.0, 1.0) = 0.2;
uniform float particle_rotation_speed : hint_range(0.0, 10.0) = 5;

uniform vec2 direction;
uniform float strength : hint_range(0.0, 10.0) = 0.5;
uniform int quality = 2;
uniform bool pause = false;

void vertex(){
	vec2 blurSize = abs(direction) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows, float time) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			if (!pause) {
				float random = fract(sin(point.x + 78.233) * 43758.5453123) - 0.5;
				float rot_direction = random / abs(random);
				// sin(x * 𝜋 / 3) + sin(x * 𝜋)
				point = vec2(
					cos(rot_direction * time * point.x * particle_rotation_speed / 3.0) + cos(rot_direction * time * point.x * particle_rotation_speed),
					sin(rot_direction * time * point.y * particle_rotation_speed / 3.0) + sin(rot_direction * time * point.y * particle_rotation_speed)
				) * 0.5 + 0.5;
			}
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

vec4 run_worley(vec2 uv) {
	float worley = worley(uv + direction * TIME * (pause ? 0.0 : strength), width, height, TIME);
	return vec4(particle_color, step(1.0 - particle_size, 1.0-worley) * (1.0-worley));
}

void fragment() {
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = run_worley(UV) * inSquare;
	if (!pause) {
		vec2 stepSize = direction/(float(quality)) / 50.0 * strength;
		vec2 uv;
		for(int i = 1; i <= quality; i++){
			uv = UV + stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
			
			uv = UV - stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
		}
		COLOR.rgb /= numSamples;
		COLOR.a /= float(quality)*2.0 + 1.0;
	}
	if (
		COLOR.a == 0.0 &&
		UV.x >= 0.0 &&
		UV.x <= 1.0 &&
		UV.y >= 0.0 &&
		UV.y <= 1.0
	) {
		COLOR = background_color;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xdmlj"]
resource_local_to_scene = true
shader = SubResource("Shader_h68oi")
shader_parameter/width = 50.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.164706, 0.396078, 1, 1)
shader_parameter/background_color = Color(0, 0, 1, 0.168627)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(0, 1)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = true

[sub_resource type="Gradient" id="Gradient_g84sw"]
colors = PackedColorArray(0, 1, 0, 0, 0, 0.670588, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_felqj"]
resource_local_to_scene = true
gradient = SubResource("Gradient_g84sw")
width = 8
height = 30

[node name="LevelPrototype" type="Node2D"]

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_32w8q")
format = 2
layer_0/name = "Solid Blocks"
layer_0/tile_data = PackedInt32Array(-5, 1, 0, -4, 1, 0, -3, 1, 0, -2, 1, 0, -1, 1, 0, -65536, 1, 0, -65535, 1, 0, -65534, 1, 0, -65533, 1, 0, -6, 1, 0, 65530, 1, 0, 131066, 65537, 0, 196604, 1, 0, 196605, 1, 0, 196606, 1, 0, 196607, 1, 0, 131072, 1, 0, 131073, 1, 0, 131074, 1, 0, 131075, 1, 0, 131076, 1, 0, 65531, 65537, 0, 65532, 65537, 0, 65533, 65537, 0, 65534, 65537, 0, 65535, 65537, 0, 0, 65537, 0, 1, 65537, 0, 2, 65537, 0, 3, 65537, 0, 65539, 65537, 0, 65538, 65537, 0, 65537, 65537, 0, 65536, 65537, 0, 131071, 65537, 0, 131070, 65537, 0, 131069, 65537, 0, 131068, 65537, 0, 131067, 65537, 0, -65532, 1, 0, -131068, 1, 0, -196604, 1, 0, -262140, 1, 0, -327676, 1, 0, -327675, 1, 0, -327674, 1, 0, -327673, 1, 0, -327672, 1, 0, -327671, 1, 0, -327670, 1, 0, -327669, 1, 0, -327668, 1, 0, 131077, 1, 0, 131078, 1, 0, 131079, 1, 0, 131080, 1, 0, 131081, 1, 0, 131082, 1, 0, 131083, 1, 0, 131084, 1, 0, 65548, 1, 0, 12, 1, 0, -65524, 1, 0, -131060, 1, 0, -196596, 1, 0, -262132, 1, 0, 65540, 65537, 0, 4, 65537, 0, 65541, 65537, 0, 5, 65537, 0, -65531, 65537, 0, -131067, 65537, 0, -196603, 65537, 0, -262139, 65537, 0, -262138, 65537, 0, -262137, 65537, 0, -262136, 65537, 0, -262135, 65537, 0, -262134, 65537, 0, -262133, 65537, 0, -196597, 65537, 0, -196598, 65537, 0, -196599, 65537, 0, -196600, 65537, 0, -196601, 65537, 0, -196602, 65537, 0, -131066, 65537, 0, -131065, 65537, 0, -131064, 65537, 0, -131063, 65537, 0, -131062, 65537, 0, -131061, 65537, 0, -65525, 65537, 0, -65526, 65537, 0, -65527, 65537, 0, -65528, 65537, 0, -65529, 65537, 0, -65530, 65537, 0, 6, 65537, 0, 65542, 65537, 0, 65543, 65537, 0, 65544, 65537, 0, 65545, 65537, 0, 65546, 65537, 0, 65547, 65537, 0, 11, 65537, 0, 10, 65537, 0, 9, 65537, 0, 8, 65537, 0, 7, 65537, 0, 131065, 1, 0, 131064, 1, 0, 131063, 1, 0, 131062, 1, 0, 131061, 1, 0, 131060, 1, 0, 131059, 1, 0, 131058, 1, 0, 196594, 1, 0, 262130, 1, 0, 327666, 65537, 0, 393202, 1, 0, 393203, 1, 0, 393204, 1, 0, 393205, 1, 0, 393206, 1, 0, 393207, 1, 0, 393208, 1, 0, 393209, 1, 0, 262129, 1, 0, 262128, 1, 0, 262127, 1, 0, 262126, 1, 0, 262125, 1, 0, 262124, 1, 0, 327660, 1, 0, 393196, 1, 0, 393197, 1, 0, 393198, 1, 0, 393199, 1, 0, 393200, 1, 0, 393201, 1, 0, 393210, 1, 0, 327674, 1, 0, 262138, 1, 0, 327667, 65537, 0, 262131, 65537, 0, 196595, 65537, 0, 196596, 65537, 0, 196597, 65537, 0, 196598, 65537, 0, 196599, 65537, 0, 196600, 65537, 0, 196601, 65537, 0, 262137, 65537, 0, 327673, 65537, 0, 327672, 65537, 0, 327671, 65537, 0, 327670, 65537, 0, 327669, 65537, 0, 327668, 65537, 0, 262132, 65537, 0, 262133, 65537, 0, 262134, 65537, 0, 262135, 65537, 0, 262136, 65537, 0, 327661, 65537, 0, 327662, 65537, 0, 327663, 65537, 0, 327664, 65537, 0, 327665, 65537, 0, 196602, 65537, 0, 196603, 65537, 0, 65529, 1, 0, 262139, 1, 0, 262140, 1, 0, 524286, 1, 0, 524287, 1, 0, 458752, 1, 0, 458753, 1, 0, 458754, 1, 0, 458755, 1, 0, 458756, 1, 0, 458757, 1, 0, 458758, 1, 0, 458759, 1, 0, 458760, 1, 0, 458761, 1, 0, 458762, 1, 0, 458763, 1, 0, 458764, 1, 0, 262123, 1, 0, 262122, 1, 0, 262121, 1, 0, 262120, 1, 0, 262119, 1, 0, 262118, 1, 0, 262117, 1, 0, 262116, 1, 0, 262115, 1, 0, 262114, 1, 0, 262113, 1, 0, 262112, 1, 0, 262111, 1, 0, 262110, 1, 0, 262109, 1, 0, 262108, 1, 0, 262107, 1, 0, 262106, 1, 0, 262105, 1, 0, 262104, 1, 0, 262103, 1, 0, 262102, 1, 0, 262101, 1, 0, 262100, 1, 0, 262099, 1, 0, 262098, 1, 0, 262096, 1, 0, 262094, 1, 0, 262092, 1, 0, 262090, 1, 0, 262088, 1, 0, 262086, 1, 0, 262084, 1, 0, 262082, 1, 0, 262080, 1, 0, 262078, 1, 0, 262077, 1, 0, 262076, 1, 0, 262075, 1, 0, 262074, 1, 0, 262073, 1, 0, 262072, 1, 0, 262071, 1, 0, 262070, 1, 0, 262069, 1, 0, 262068, 1, 0, 262067, 1, 0, 262066, 1, 0, 262065, 1, 0, 262064, 1, 0, 262063, 1, 0, 262062, 1, 0, 262061, 1, 0, 262060, 1, 0, 262059, 1, 0, 262058, 1, 0, 262057, 1, 0, 262056, 1, 0, 262055, 1, 0, 262054, 1, 0, 262053, 1, 0, 262052, 1, 0, 262051, 1, 0, 262050, 1, 0, 262049, 1, 0, 262048, 1, 0, 262047, 1, 0, 262046, 1, 0, 262045, 1, 0, 262044, 1, 0, 262043, 1, 0, 262042, 1, 0, 262041, 1, 0, 262040, 1, 0, 262039, 1, 0, 262038, 1, 0, 262037, 1, 0, 262036, 1, 0, 262035, 1, 0, 262034, 1, 0, 262033, 1, 0, 262032, 1, 0, 262031, 1, 0, 262030, 1, 0, -52, 1, 0, -53, 1, 0, -54, 1, 0, -55, 1, 0, -262200, 1, 0, -262201, 1, 0, -262202, 1, 0, -262203, 1, 0, -262208, 1, 0, -262209, 1, 0, -262210, 1, 0, -262211, 1, 0, -262218, 1, 0, -262219, 1, 0, -262220, 1, 0, -262221, 1, 0, -262230, 1, 0, -262231, 1, 0, -262232, 1, 0, -262233, 1, 0, -262244, 1, 0, -262245, 1, 0, -262246, 1, 0, -262247, 1, 0, -104, 1, 0, -105, 1, 0, -106, 1, 0, -107, 1, 0, -262252, 1, 0, -262253, 1, 0, -262254, 1, 0, -262255, 1, 0, 262029, 1, 0, 262028, 1, 0, 262027, 1, 0, 262026, 1, 0, 262025, 1, 0, 262024, 1, 0, 262023, 1, 0, 262022, 1, 0, 262021, 1, 0, 262020, 1, 0, 262019, 1, 0, 262018, 1, 0, 262017, 1, 0, 262016, 1, 0, 262015, 1, 0, 262014, 1, 0, 262013, 1, 0, 262012, 1, 0, 262011, 1, 0, 262010, 1, 0, 262009, 1, 0, 262008, 1, 0, 262007, 1, 0, 262006, 1, 0, 262005, 1, 0, 262004, 1, 0, 262003, 1, 0, 262002, 1, 0, 262001, 1, 0, 262000, 1, 0, 196495, 1, 0, 196493, 1, 0, 130956, 1, 0, 196491, 1, 0, 196489, 1, 0, 196487, 1, 0, 130951, 1, 0, 196485, 1, 0, 196483, 1, 0, 130946, 1, 0, -262271, 1, 0, -262272, 1, 0, -262273, 1, 0, -262274, 1, 0, 196510, 1, 0, 196512, 1, 0, 130977, 1, 0, 196514, 1, 0, 196516, 1, 0, 196518, 1, 0, 130982, 1, 0)
layer_1/name = "Gameobjects"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 1
layer_1/tile_data = PackedInt32Array()

[node name="PlatformsList" type="Node" parent="."]

[node name="NormalPlatform" parent="PlatformsList" instance=ExtResource("2_bkqre")]
position = Vector2(33, -47)
_collisionSize = Vector2(60, 8)

[node name="MovingPlatform" parent="PlatformsList" instance=ExtResource("3_sj8q7")]
position = Vector2(-63, -26)

[node name="Sprite" parent="PlatformsList/MovingPlatform" index="0"]
texture = SubResource("GradientTexture2D_tqo22")

[node name="AnimationPlayer" parent="PlatformsList/MovingPlatform" index="2"]
autoplay = "Move"
libraries = {
"": SubResource("AnimationLibrary_wdbp8")
}

[node name="MovingPlatform2" parent="PlatformsList" instance=ExtResource("3_sj8q7")]
position = Vector2(40, -101)

[node name="Sprite" parent="PlatformsList/MovingPlatform2" index="0"]
texture = SubResource("GradientTexture2D_5afbk")

[node name="AnimationPlayer" parent="PlatformsList/MovingPlatform2" index="2"]
autoplay = "Move"
libraries = {
"": SubResource("AnimationLibrary_mpaml")
}

[node name="GameObjectsList" type="Node" parent="."]

[node name="Box" parent="GameObjectsList" instance=ExtResource("5_wi1df")]
position = Vector2(173, -106)

[node name="Box2" parent="GameObjectsList" instance=ExtResource("5_wi1df")]
position = Vector2(125, -99)

[node name="GravityfieldList" type="Node" parent="."]

[node name="Gravityfield_Normal" parent="GravityfieldList" instance=ExtResource("6_ot4hf")]
position = Vector2(-302, -145)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Normal" index="0"]
shape = SubResource("RectangleShape2D_vpx1o")

[node name="GravityDirection" parent="GravityfieldList/Gravityfield_Normal/GravityfieldCollider" index="0"]
position = Vector2(0, -47)

[node name="Sprite" parent="GravityfieldList/Gravityfield_Normal/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_w4st0")

[node name="Gravityfield_Time" parent="GravityfieldList" instance=ExtResource("7_vr5mk")]
position = Vector2(-153, -147)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Time" index="0"]
shape = SubResource("RectangleShape2D_qt8sq")

[node name="GravityDirection" parent="GravityfieldList/Gravityfield_Time/GravityfieldCollider" index="0"]
position = Vector2(14, -19)

[node name="Sprite" parent="GravityfieldList/Gravityfield_Time/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_cm6gq")

[node name="Gravityfield_Toggle" parent="GravityfieldList" instance=ExtResource("8_i08wq")]
position = Vector2(174, -108)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Toggle" index="0"]
shape = SubResource("RectangleShape2D_c7464")

[node name="Sprite" parent="GravityfieldList/Gravityfield_Toggle/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_xdmlj")

[node name="Switch" parent="GravityfieldList/Gravityfield_Toggle" index="1"]
position = Vector2(-44, 17)

[node name="JumpPadsList" type="Node" parent="."]

[node name="JumpPad" parent="JumpPadsList" instance=ExtResource("9_3ixdi")]
position = Vector2(-99, -163)
_objectCollisionSize = Vector2(30, 8)
_strength = 600.0

[node name="Sprite" parent="JumpPadsList/JumpPad" index="0"]
texture = SubResource("GradientTexture2D_felqj")

[node name="PortalsList" type="Node" parent="."]

[node name="Portals" parent="PortalsList" instance=ExtResource("10_xwke7")]
position = Vector2(-272, 28)

[node name="ImpulseDirection" parent="PortalsList/Portals/Portal1" index="1"]
position = Vector2(34, -56)

[node name="CheckpointsList" type="Node" parent="."]

[node name="Checkpoint" parent="CheckpointsList" instance=ExtResource("11_l85ei")]
position = Vector2(37, 112)

[node name="CharacterBody2D" parent="." instance=ExtResource("12_oyuft")]
position = Vector2(-1607, 36)

[editable path="PlatformsList/MovingPlatform"]
[editable path="PlatformsList/MovingPlatform2"]
[editable path="GravityfieldList/Gravityfield_Normal"]
[editable path="GravityfieldList/Gravityfield_Time"]
[editable path="GravityfieldList/Gravityfield_Toggle"]
[editable path="JumpPadsList/JumpPad"]
[editable path="PortalsList/Portals"]
[editable path="CharacterBody2D"]
