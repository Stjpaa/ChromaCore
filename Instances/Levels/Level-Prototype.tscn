[gd_scene load_steps=63 format=3 uid="uid://besp4vl5cfm8a"]

[ext_resource type="Texture2D" uid="uid://ehww7w412i1" path="res://Assets/atlas.png" id="1_dxho2"]
[ext_resource type="PackedScene" uid="uid://cs253h11xbsa5" path="res://Instances/Levels/LevelManager.tscn" id="1_ivd61"]
[ext_resource type="Texture2D" uid="uid://chb1cn1avyu4c" path="res://Assets/Tileset.png" id="1_jj2hn"]
[ext_resource type="Shader" path="res://Shaders/color-palette.gdshader" id="1_rm56s"]
[ext_resource type="PackedScene" uid="uid://b3t2mpsrlclj1" path="res://Instances/Gameobjects/Platforms/NormalPlatform.tscn" id="2_bkqre"]
[ext_resource type="PackedScene" uid="uid://jlg4pvnpuc7i" path="res://Instances/Gameobjects/Platforms/MovingPlatform.tscn" id="3_sj8q7"]
[ext_resource type="PackedScene" uid="uid://c7s6ybr43gk6l" path="res://Instances/Gameobjects/Movable Objects/Box.tscn" id="5_wi1df"]
[ext_resource type="PackedScene" uid="uid://do5cdmcaycbhc" path="res://Instances/Gameobjects/Gravityfields/Gravityfield_Normal.tscn" id="6_ot4hf"]
[ext_resource type="PackedScene" uid="uid://b117q2ya6dts7" path="res://Instances/Gameobjects/Gravityfields/Gravityfield_Time.tscn" id="7_vr5mk"]
[ext_resource type="PackedScene" uid="uid://rfnsqa1150ea" path="res://Instances/Gameobjects/Gravityfields/Gravityfield_Toggle.tscn" id="8_i08wq"]
[ext_resource type="PackedScene" uid="uid://mb5aisolynk5" path="res://Instances/Gameobjects/Platforms/JumpPad.tscn" id="9_3ixdi"]
[ext_resource type="PackedScene" uid="uid://dt56jo4o7i0hw" path="res://Instances/Gameobjects/Portals/Portals.tscn" id="10_xwke7"]
[ext_resource type="PackedScene" uid="uid://oj3xa6mp45cx" path="res://Instances/Gameobjects/Traps and Checkpoints/Checkpoint.tscn" id="11_l85ei"]
[ext_resource type="PackedScene" uid="uid://bxrinvpxhsiqc" path="res://Dillon/PlayerController/PlayerController2D.tscn" id="11_xf5fx"]
[ext_resource type="Shader" path="res://Shaders/star-sky.gdshader" id="13_3inke"]
[ext_resource type="Texture2D" uid="uid://bsu6aquff70be" path="res://Assets/Sprites/p1_stand.png" id="14_kjbvf"]
[ext_resource type="PackedScene" uid="uid://csvqe8kqn7jfh" path="res://Instances/Menus/IngameUI/IngameUI.tscn" id="15_limdq"]
[ext_resource type="PackedScene" uid="uid://b1sw6dddgaq2d" path="res://Instances/Gameobjects/Traps and Checkpoints/Spikes.tscn" id="16_b88yk"]

[sub_resource type="Gradient" id="Gradient_b1py6"]
colors = PackedColorArray(1, 0.305933, 0.172762, 1, 0.814486, 0.163879, 2.88785e-07, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_hh2lp"]
gradient = SubResource("Gradient_b1py6")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8srdo"]
shader = ExtResource("1_rm56s")
shader_parameter/brightness = 1.0
shader_parameter/gradient = SubResource("GradientTexture1D_hh2lp")

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_iwd18"]
texture = ExtResource("1_dxho2")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
3:0/0 = 0
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
0:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
2:1/0 = 0
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
3:1/0 = 0
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
4:1/0 = 0
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
0:2/0 = 0
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
0:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 1, -8, 1)
1:2/0 = 0
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 1, -8, 1)
2:2/0 = 0
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
3:2/0 = 0
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
4:2/0 = 0
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, -8, 8, 8, -8, 8)
0:3/0 = 0
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0 = 0
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0 = 0
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0 = 0
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0 = 0
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_2e4j6"]
texture = ExtResource("1_jj2hn")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)
4:0/size_in_atlas = Vector2i(2, 2)
4:0/0 = 0
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
6:0/size_in_atlas = Vector2i(4, 4)
6:0/0 = 0
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
10:0/size_in_atlas = Vector2i(4, 4)
10:0/0 = 0
10:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
10:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/z_index = 1
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
2:0/size_in_atlas = Vector2i(2, 2)
2:0/0 = 0
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_32w8q"]
physics_layer_0/collision_layer = 1
sources/1 = SubResource("TileSetAtlasSource_2e4j6")
sources/0 = SubResource("TileSetAtlasSource_iwd18")

[sub_resource type="Gradient" id="Gradient_hmh3d"]
offsets = PackedFloat32Array(0, 0.0852941, 0.844118)
colors = PackedColorArray(1, 1, 1, 0, 0.611765, 0.784314, 0.862745, 0, 0.0352941, 0.462745, 0.662745, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_tqo22"]
resource_local_to_scene = true
gradient = SubResource("Gradient_hmh3d")
width = 8
height = 16
fill_from = Vector2(0, 0.0042735)

[sub_resource type="Animation" id="Animation_kgtk0"]
resource_name = "Move"
length = 10.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 3, 5, 8, 10),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(-63, -26), Vector2(-63, -26), Vector2(50, -76), Vector2(50, -76), Vector2(-63, -26)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_wdbp8"]
_data = {
"Move": SubResource("Animation_kgtk0")
}

[sub_resource type="GradientTexture2D" id="GradientTexture2D_5afbk"]
resource_local_to_scene = true
gradient = SubResource("Gradient_hmh3d")
width = 8
height = 16
fill_from = Vector2(0, 0.0042735)

[sub_resource type="Animation" id="Animation_ig103"]
resource_name = "Move"
length = 10.0
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 3, 5, 8, 10),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(40, -101), Vector2(40, -101), Vector2(-89, -101), Vector2(-89, -101), Vector2(40, -101)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_mpaml"]
_data = {
"Move": SubResource("Animation_ig103")
}

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_ypp4y"]
friction = 0.6

[sub_resource type="Gradient" id="Gradient_5kk12"]
colors = PackedColorArray(0.00784314, 0.219608, 0.94902, 1, 0.00784314, 0.219608, 0.94902, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_dkal7"]
resource_local_to_scene = true
gradient = SubResource("Gradient_5kk12")
width = 20
height = 20

[sub_resource type="RectangleShape2D" id="RectangleShape2D_vpx1o"]
resource_local_to_scene = true
size = Vector2(50, 50)

[sub_resource type="Shader" id="Shader_s4k2c"]
code = "shader_type canvas_item;

uniform float width : hint_range(10, 1000) = 30;
uniform float height : hint_range(10, 1000) = 30;
uniform vec3 particle_color : source_color;
uniform vec4 background_color : source_color;
uniform float particle_size : hint_range(0.0, 1.0) = 0.2;
uniform float particle_rotation_speed : hint_range(0.0, 10.0) = 5;

uniform vec2 direction;
uniform float strength : hint_range(0.0, 10.0) = 0.5;
uniform int quality = 2;
uniform bool pause = false;

void vertex(){
	vec2 blurSize = abs(direction) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows, float time) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			if (!pause) {
				float random = fract(sin(point.x + 78.233) * 43758.5453123) - 0.5;
				float rot_direction = random / abs(random);
				// sin(x * 𝜋 / 3) + sin(x * 𝜋)
				point = vec2(
					cos(rot_direction * time * point.x * particle_rotation_speed / 3.0) + cos(rot_direction * time * point.x * particle_rotation_speed),
					sin(rot_direction * time * point.y * particle_rotation_speed / 3.0) + sin(rot_direction * time * point.y * particle_rotation_speed)
				) * 0.5 + 0.5;
			}
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

vec4 run_worley(vec2 uv) {
	float worley = worley(uv + direction * TIME * (pause ? 0.0 : strength), width, height, TIME);
	return vec4(particle_color, step(1.0 - particle_size, 1.0-worley) * (1.0-worley));
}

void fragment() {
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = run_worley(UV) * inSquare;
	if (!pause) {
		vec2 stepSize = direction/(float(quality)) / 50.0 * strength;
		vec2 uv;
		for(int i = 1; i <= quality; i++){
			uv = UV + stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
			
			uv = UV - stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
		}
		COLOR.rgb /= numSamples;
		COLOR.a /= float(quality)*2.0 + 1.0;
	}
	if (
		COLOR.a == 0.0 &&
		UV.x >= 0.0 &&
		UV.x <= 1.0 &&
		UV.y >= 0.0 &&
		UV.y <= 1.0
	) {
		COLOR = background_color;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_w4st0"]
shader = SubResource("Shader_s4k2c")
shader_parameter/width = 50.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.486275, 0.988235, 0, 1)
shader_parameter/background_color = Color(0, 0.854902, 0, 0.137255)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(0, 1)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = false

[sub_resource type="RectangleShape2D" id="RectangleShape2D_qt8sq"]
resource_local_to_scene = true
size = Vector2(50, 50)

[sub_resource type="Shader" id="Shader_xo56k"]
code = "shader_type canvas_item;

uniform float width : hint_range(10, 1000) = 30;
uniform float height : hint_range(10, 1000) = 30;
uniform vec3 particle_color : source_color;
uniform vec4 background_color : source_color;
uniform float particle_size : hint_range(0.0, 1.0) = 0.2;
uniform float particle_rotation_speed : hint_range(0.0, 10.0) = 5;

uniform vec2 direction;
uniform float strength : hint_range(0.0, 10.0) = 0.5;
uniform int quality = 2;
uniform bool pause = false;

void vertex(){
	vec2 blurSize = abs(direction) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows, float time) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			if (!pause) {
				float random = fract(sin(point.x + 78.233) * 43758.5453123) - 0.5;
				float rot_direction = random / abs(random);
				// sin(x * 𝜋 / 3) + sin(x * 𝜋)
				point = vec2(
					cos(rot_direction * time * point.x * particle_rotation_speed / 3.0) + cos(rot_direction * time * point.x * particle_rotation_speed),
					sin(rot_direction * time * point.y * particle_rotation_speed / 3.0) + sin(rot_direction * time * point.y * particle_rotation_speed)
				) * 0.5 + 0.5;
			}
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

vec4 run_worley(vec2 uv) {
	float worley = worley(uv + direction * TIME * (pause ? 0.0 : strength), width, height, TIME);
	return vec4(particle_color, step(1.0 - particle_size, 1.0-worley) * (1.0-worley));
}

void fragment() {
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = run_worley(UV) * inSquare;
	if (!pause) {
		vec2 stepSize = direction/(float(quality)) / 50.0 * strength;
		vec2 uv;
		for(int i = 1; i <= quality; i++){
			uv = UV + stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
			
			uv = UV - stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
		}
		COLOR.rgb /= numSamples;
		COLOR.a /= float(quality)*2.0 + 1.0;
	}
	if (
		COLOR.a == 0.0 &&
		UV.x >= 0.0 &&
		UV.x <= 1.0 &&
		UV.y >= 0.0 &&
		UV.y <= 1.0
	) {
		COLOR = background_color;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cm6gq"]
resource_local_to_scene = true
shader = SubResource("Shader_xo56k")
shader_parameter/width = 50.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.701961, 0.701961, 0, 1)
shader_parameter/background_color = Color(0.992157, 0.854902, 0, 0.156863)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(-0.593199, 0.805056)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = true

[sub_resource type="RectangleShape2D" id="RectangleShape2D_0wfdn"]
resource_local_to_scene = true
size = Vector2(50, 50)

[sub_resource type="Shader" id="Shader_h68oi"]
code = "shader_type canvas_item;

uniform float width : hint_range(10, 1000) = 30;
uniform float height : hint_range(10, 1000) = 30;
uniform vec3 particle_color : source_color;
uniform vec4 background_color : source_color;
uniform float particle_size : hint_range(0.0, 1.0) = 0.2;
uniform float particle_rotation_speed : hint_range(0.0, 10.0) = 5;

uniform vec2 direction;
uniform float strength : hint_range(0.0, 10.0) = 0.5;
uniform int quality = 2;
uniform bool pause = false;

void vertex(){
	vec2 blurSize = abs(direction) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows, float time) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			if (!pause) {
				float random = fract(sin(point.x + 78.233) * 43758.5453123) - 0.5;
				float rot_direction = random / abs(random);
				// sin(x * 𝜋 / 3) + sin(x * 𝜋)
				point = vec2(
					cos(rot_direction * time * point.x * particle_rotation_speed / 3.0) + cos(rot_direction * time * point.x * particle_rotation_speed),
					sin(rot_direction * time * point.y * particle_rotation_speed / 3.0) + sin(rot_direction * time * point.y * particle_rotation_speed)
				) * 0.5 + 0.5;
			}
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

vec4 run_worley(vec2 uv) {
	float worley = worley(uv + direction * TIME * (pause ? 0.0 : strength), width, height, TIME);
	return vec4(particle_color, step(1.0 - particle_size, 1.0-worley) * (1.0-worley));
}

void fragment() {
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = run_worley(UV) * inSquare;
	if (!pause) {
		vec2 stepSize = direction/(float(quality)) / 50.0 * strength;
		vec2 uv;
		for(int i = 1; i <= quality; i++){
			uv = UV + stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
			
			uv = UV - stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
		}
		COLOR.rgb /= numSamples;
		COLOR.a /= float(quality)*2.0 + 1.0;
	}
	if (
		COLOR.a == 0.0 &&
		UV.x >= 0.0 &&
		UV.x <= 1.0 &&
		UV.y >= 0.0 &&
		UV.y <= 1.0
	) {
		COLOR = background_color;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ya3tf"]
resource_local_to_scene = true
shader = SubResource("Shader_h68oi")
shader_parameter/width = 50.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.164706, 0.396078, 1, 1)
shader_parameter/background_color = Color(0, 0, 1, 0.168627)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(0, 1)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = true

[sub_resource type="RectangleShape2D" id="RectangleShape2D_j5sff"]
resource_local_to_scene = true
size = Vector2(75, 125)

[sub_resource type="Shader" id="Shader_w06af"]
code = "shader_type canvas_item;

uniform float width : hint_range(10, 1000) = 30;
uniform float height : hint_range(10, 1000) = 30;
uniform vec3 particle_color : source_color;
uniform vec4 background_color : source_color;
uniform float particle_size : hint_range(0.0, 1.0) = 0.2;
uniform float particle_rotation_speed : hint_range(0.0, 10.0) = 5;

uniform vec2 direction;
uniform float strength : hint_range(0.0, 10.0) = 0.5;
uniform int quality = 2;
uniform bool pause = false;

void vertex(){
	vec2 blurSize = abs(direction) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows, float time) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			if (!pause) {
				float random = fract(sin(point.x + 78.233) * 43758.5453123) - 0.5;
				float rot_direction = random / abs(random);
				// sin(x * 𝜋 / 3) + sin(x * 𝜋)
				point = vec2(
					cos(rot_direction * time * point.x * particle_rotation_speed / 3.0) + cos(rot_direction * time * point.x * particle_rotation_speed),
					sin(rot_direction * time * point.y * particle_rotation_speed / 3.0) + sin(rot_direction * time * point.y * particle_rotation_speed)
				) * 0.5 + 0.5;
			}
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

vec4 run_worley(vec2 uv) {
	float worley = worley(uv + direction * TIME * (pause ? 0.0 : strength), width, height, TIME);
	return vec4(particle_color, step(1.0 - particle_size, 1.0-worley) * (1.0-worley));
}

void fragment() {
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = run_worley(UV) * inSquare;
	if (!pause) {
		vec2 stepSize = direction/(float(quality)) / 50.0 * strength;
		vec2 uv;
		for(int i = 1; i <= quality; i++){
			uv = UV + stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
			
			uv = UV - stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
		}
		COLOR.rgb /= numSamples;
		COLOR.a /= float(quality)*2.0 + 1.0;
	}
	if (
		COLOR.a == 0.0 &&
		UV.x >= 0.0 &&
		UV.x <= 1.0 &&
		UV.y >= 0.0 &&
		UV.y <= 1.0
	) {
		COLOR = background_color;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_sxcf1"]
resource_local_to_scene = true
shader = SubResource("Shader_w06af")
shader_parameter/width = 75.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.486275, 0.988235, 0, 1)
shader_parameter/background_color = Color(0, 0.854902, 0, 0.137255)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(-0.368048, 0.929807)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = false

[sub_resource type="RectangleShape2D" id="RectangleShape2D_mcp58"]
resource_local_to_scene = true
size = Vector2(50, 150)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_esso6"]
resource_local_to_scene = true
shader = SubResource("Shader_h68oi")
shader_parameter/width = 50.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.164706, 0.396078, 1, 1)
shader_parameter/background_color = Color(0, 0, 1, 0.168627)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(0, 1)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = true

[sub_resource type="RectangleShape2D" id="RectangleShape2D_6ii74"]
resource_local_to_scene = true
size = Vector2(64, 352)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nhevw"]
resource_local_to_scene = true
shader = SubResource("Shader_w06af")
shader_parameter/width = 64.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.486275, 0.988235, 0, 1)
shader_parameter/background_color = Color(0, 0.854902, 0, 0.137255)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(0, -1)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = false

[sub_resource type="RectangleShape2D" id="RectangleShape2D_0sfou"]
resource_local_to_scene = true
size = Vector2(450, 64)

[sub_resource type="ShaderMaterial" id="ShaderMaterial_034wp"]
resource_local_to_scene = true
shader = SubResource("Shader_w06af")
shader_parameter/width = 450.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.486275, 0.988235, 0, 1)
shader_parameter/background_color = Color(0, 0.854902, 0, 0.137255)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(1, 0)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = false

[sub_resource type="RectangleShape2D" id="RectangleShape2D_6apcr"]
resource_local_to_scene = true
size = Vector2(48, 144)

[sub_resource type="Shader" id="Shader_thejt"]
code = "shader_type canvas_item;

uniform float width : hint_range(10, 1000) = 30;
uniform float height : hint_range(10, 1000) = 30;
uniform vec3 particle_color : source_color;
uniform vec4 background_color : source_color;
uniform float particle_size : hint_range(0.0, 1.0) = 0.2;
uniform float particle_rotation_speed : hint_range(0.0, 10.0) = 5;

uniform vec2 direction;
uniform float strength : hint_range(0.0, 10.0) = 0.5;
uniform int quality = 2;
uniform bool pause = false;

void vertex(){
	vec2 blurSize = abs(direction) * 2.0;
	VERTEX *= blurSize + 1.0;
	UV = (UV - 0.5) * (blurSize + 1.0) + 0.5;
}

float insideUnitSquare(vec2 v) {
    vec2 s = step(vec2(0.0), v) - step(vec2(1.0), v);
    return s.x * s.y;   
}

vec2 random(vec2 uv) {
	return vec2(fract(sin(dot(uv.xy,
		vec2(12.9898,78.233))) * 43758.5453123));
}

float worley(vec2 uv, float columns, float rows, float time) {
	
	vec2 index_uv = floor(vec2(uv.x * columns, uv.y * rows));
	vec2 fract_uv = fract(vec2(uv.x * columns, uv.y * rows));
	
	float minimum_dist = 1.0;  
	
	for (int y= -1; y <= 1; y++) {
		for (int x= -1; x <= 1; x++) {
			vec2 neighbor = vec2(float(x),float(y));
			vec2 point = random(index_uv + neighbor);
			if (!pause) {
				float random = fract(sin(point.x + 78.233) * 43758.5453123) - 0.5;
				float rot_direction = random / abs(random);
				// sin(x * 𝜋 / 3) + sin(x * 𝜋)
				point = vec2(
					cos(rot_direction * time * point.x * particle_rotation_speed / 3.0) + cos(rot_direction * time * point.x * particle_rotation_speed),
					sin(rot_direction * time * point.y * particle_rotation_speed / 3.0) + sin(rot_direction * time * point.y * particle_rotation_speed)
				) * 0.5 + 0.5;
			}
			vec2 diff = neighbor + point - fract_uv;
			float dist = length(diff);
			minimum_dist = min(minimum_dist, dist);
		}
	}
	
	return minimum_dist;
}

vec4 run_worley(vec2 uv) {
	float worley = worley(uv + direction * TIME * (pause ? 0.0 : strength), width, height, TIME);
	return vec4(particle_color, step(1.0 - particle_size, 1.0-worley) * (1.0-worley));
}

void fragment() {
	float inSquare = insideUnitSquare(UV);
	float numSamples = inSquare;
	COLOR = run_worley(UV) * inSquare;
	if (!pause) {
		vec2 stepSize = direction/(float(quality)) / 50.0 * strength;
		vec2 uv;
		for(int i = 1; i <= quality; i++){
			uv = UV + stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
			
			uv = UV - stepSize * float(i);
			inSquare = insideUnitSquare(uv);
			numSamples += inSquare;
			COLOR += run_worley(uv) * inSquare;
		}
		COLOR.rgb /= numSamples;
		COLOR.a /= float(quality)*2.0 + 1.0;
	}
	if (
		COLOR.a == 0.0 &&
		UV.x >= 0.0 &&
		UV.x <= 1.0 &&
		UV.y >= 0.0 &&
		UV.y <= 1.0
	) {
		COLOR = background_color;
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gi30v"]
resource_local_to_scene = true
shader = SubResource("Shader_thejt")
shader_parameter/width = 48.0
shader_parameter/height = 30.0
shader_parameter/particle_color = Color(0.701961, 0.701961, 0, 1)
shader_parameter/background_color = Color(0.992157, 0.854902, 0, 0.156863)
shader_parameter/particle_size = 0.2
shader_parameter/particle_rotation_speed = 5.0
shader_parameter/direction = Vector2(0, 1)
shader_parameter/strength = 1.33333
shader_parameter/quality = 2
shader_parameter/pause = true

[sub_resource type="Gradient" id="Gradient_g84sw"]
colors = PackedColorArray(0, 1, 0, 0, 0, 0.670588, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_felqj"]
resource_local_to_scene = true
gradient = SubResource("Gradient_g84sw")
width = 8
height = 30

[sub_resource type="ShaderMaterial" id="ShaderMaterial_nipui"]
shader = ExtResource("13_3inke")
shader_parameter/bg_color = null

[sub_resource type="Sky" id="Sky_troy4"]
sky_material = SubResource("ShaderMaterial_nipui")
process_mode = 1

[sub_resource type="Environment" id="Environment_knb4o"]
background_mode = 2
background_canvas_max_layer = -1
sky = SubResource("Sky_troy4")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xt6qb"]
shader = ExtResource("13_3inke")
shader_parameter/bg_color = Color(0, 0, 0.0431373, 1)

[sub_resource type="CanvasTexture" id="CanvasTexture_ry0wi"]

[node name="LevelPrototype" type="Node2D"]

[node name="TileMap" type="TileMap" parent="."]
texture_filter = 1
material = SubResource("ShaderMaterial_8srdo")
tile_set = SubResource("TileSet_32w8q")
format = 2
layer_0/name = "Solid Blocks"
layer_0/tile_data = PackedInt32Array(-5, 1, 0, -4, 1, 0, -3, 1, 0, -2, 1, 0, -1, 1, 0, -65536, 1, 0, -65535, 1, 0, -65534, 1, 0, -65533, 1, 0, -6, 1, 0, 65530, 1, 0, 131066, 65537, 0, 196604, 1, 0, 196605, 1, 0, 196606, 1, 0, 196607, 1, 0, 131072, 1, 0, 131073, 1, 0, 131074, 1, 0, 131075, 1, 0, 131076, 1, 0, 65531, 65537, 0, 65532, 65537, 0, 65533, 65537, 0, 65534, 65537, 0, 65535, 65537, 0, 0, 65537, 0, 1, 65537, 0, 2, 65537, 0, 3, 65537, 0, 65539, 65537, 0, 65538, 65537, 0, 65537, 65537, 0, 65536, 65537, 0, 131071, 65537, 0, 131070, 65537, 0, 131069, 65537, 0, 131068, 65537, 0, 131067, 65537, 0, -65532, 1, 0, -131068, 1, 0, -196604, 1, 0, -262140, 1, 0, -327676, 1, 0, -327675, 1, 0, -327674, 1, 0, -327673, 1, 0, -327672, 1, 0, -327671, 1, 0, -327670, 1, 0, -327669, 1, 0, -327668, 1, 0, 131077, 1, 0, 131078, 1, 0, 131079, 1, 0, 131080, 1, 0, 131081, 1, 0, 131082, 1, 0, 131083, 1, 0, 131084, 1, 0, 65548, 1, 0, 12, 1, 0, -65524, 1, 0, -131060, 1, 0, -196596, 1, 0, -262132, 1, 0, 65540, 65537, 0, 4, 65537, 0, 65541, 65537, 0, 5, 65537, 0, -65531, 65537, 0, -131067, 65537, 0, -196603, 65537, 0, -262139, 65537, 0, -262138, 65537, 0, -262137, 65537, 0, -262136, 65537, 0, -262135, 65537, 0, -262134, 65537, 0, -262133, 65537, 0, -196597, 65537, 0, -196598, 65537, 0, -196599, 65537, 0, -196600, 65537, 0, -196601, 65537, 0, -196602, 65537, 0, -131066, 65537, 0, -131065, 65537, 0, -131064, 65537, 0, -131063, 65537, 0, -131062, 65537, 0, -131061, 65537, 0, -65525, 65537, 0, -65526, 65537, 0, -65527, 65537, 0, -65528, 65537, 0, -65529, 65537, 0, -65530, 65537, 0, 6, 65537, 0, 65542, 65537, 0, 65543, 65537, 0, 65544, 65537, 0, 65545, 65537, 0, 65546, 65537, 0, 65547, 65537, 0, 11, 65537, 0, 10, 65537, 0, 9, 65537, 0, 8, 65537, 0, 7, 65537, 0, 131065, 1, 0, 131064, 1, 0, 131063, 1, 0, 131062, 1, 0, 131061, 1, 0, 131060, 1, 0, 131059, 1, 0, 131058, 1, 0, 196594, 1, 0, 262130, 1, 0, 327666, 65537, 0, 393202, 1, 0, 393203, 1, 0, 393204, 1, 0, 393205, 1, 0, 393206, 1, 0, 393207, 1, 0, 393208, 1, 0, 393209, 1, 0, 262129, 1, 0, 262128, 1, 0, 262127, 1, 0, 262126, 1, 0, 262125, 1, 0, 262124, 1, 0, 327660, 1, 0, 393196, 1, 0, 393197, 1, 0, 393198, 1, 0, 393199, 1, 0, 393200, 1, 0, 393201, 1, 0, 393210, 1, 0, 327674, 1, 0, 262138, 1, 0, 327667, 65537, 0, 262131, 65537, 0, 196595, 65537, 0, 196596, 65537, 0, 196597, 65537, 0, 196598, 65537, 0, 196599, 65537, 0, 196600, 65537, 0, 196601, 65537, 0, 262137, 65537, 0, 327673, 65537, 0, 327672, 65537, 0, 327671, 65537, 0, 327670, 65537, 0, 327669, 65537, 0, 327668, 65537, 0, 262132, 65537, 0, 262133, 65537, 0, 262134, 65537, 0, 262135, 65537, 0, 262136, 65537, 0, 327661, 65537, 0, 327662, 65537, 0, 327663, 65537, 0, 327664, 65537, 0, 327665, 65537, 0, 196602, 65537, 0, 196603, 65537, 0, 65529, 1, 0, 262139, 1, 0, 262140, 1, 0, 524286, 1, 0, 524287, 1, 0, 458752, 1, 0, 458753, 1, 0, 458754, 1, 0, 458755, 1, 0, 458756, 1, 0, 458757, 1, 0, 458758, 1, 0, 458759, 1, 0, 458760, 1, 0, 458761, 1, 0, 458762, 1, 0, 458763, 1, 0, 458764, 1, 0, 262123, 1, 0, 262122, 1, 0, 262121, 1, 0, 262120, 1, 0, 262119, 1, 0, 262118, 1, 0, 262117, 1, 0, 262116, 1, 0, 262115, 1, 0, 262114, 1, 0, 262113, 1, 0, 262112, 1, 0, 262111, 1, 0, 262110, 1, 0, 262109, 1, 0, 262108, 1, 0, 262107, 1, 0, 262106, 1, 0, 262105, 1, 0, 262104, 1, 0, 262103, 1, 0, 262102, 1, 0, 262101, 1, 0, 262100, 1, 0, 262099, 1, 0, 262098, 1, 0, 262096, 1, 0, 262094, 1, 0, 262092, 1, 0, 262090, 1, 0, 262088, 1, 0, 262086, 1, 0, 262084, 1, 0, 262082, 1, 0, 262080, 1, 0, 262078, 1, 0, 262077, 1, 0, 262076, 1, 0, 262075, 1, 0, 262074, 1, 0, 262073, 1, 0, 262072, 1, 0, 262071, 1, 0, 262070, 1, 0, 262069, 1, 0, 262068, 1, 0, 262067, 1, 0, 262066, 1, 0, 262065, 1, 0, 262064, 1, 0, 262063, 1, 0, 262062, 1, 0, 262061, 1, 0, 262060, 1, 0, 262059, 1, 0, 262058, 1, 0, 262057, 1, 0, 262056, 1, 0, 262055, 1, 0, 262054, 1, 0, 262053, 1, 0, 262052, 1, 0, 262051, 1, 0, 262050, 1, 0, 262049, 1, 0, 262048, 1, 0, 262047, 1, 0, 262046, 1, 0, 262045, 1, 0, 262044, 1, 0, 262043, 1, 0, 262042, 1, 0, 262041, 1, 0, 262040, 1, 0, 262039, 1, 0, 262038, 1, 0, 262037, 1, 0, 262036, 1, 0, 262035, 1, 0, 262034, 1, 0, 262033, 1, 0, 262032, 1, 0, 262031, 1, 0, 262030, 1, 0, -52, 1, 0, -53, 1, 0, -54, 1, 0, -55, 1, 0, -262200, 1, 0, -262201, 1, 0, -262202, 1, 0, -262203, 1, 0, -262208, 1, 0, -262209, 1, 0, -262210, 1, 0, -262211, 1, 0, -262218, 1, 0, -262219, 1, 0, -262220, 1, 0, -262221, 1, 0, -262230, 1, 0, -262231, 1, 0, -262232, 1, 0, -262233, 1, 0, -262244, 1, 0, -262245, 1, 0, -262246, 1, 0, -262247, 1, 0, -104, 1, 0, -105, 1, 0, -106, 1, 0, -107, 1, 0, -262252, 1, 0, -262253, 1, 0, -262254, 1, 0, -262255, 1, 0, 262029, 1, 0, 262028, 1, 0, 262027, 1, 0, 262026, 1, 0, 262025, 1, 0, 262024, 1, 0, 262023, 1, 0, 262022, 1, 0, 262021, 1, 0, 262020, 1, 0, 262019, 1, 0, 262018, 1, 0, 262017, 1, 0, 262016, 1, 0, 262015, 1, 0, 262014, 1, 0, 262013, 1, 0, 262012, 1, 0, 262011, 1, 0, 262010, 1, 0, 262009, 1, 0, 262008, 1, 0, 262007, 1, 0, 262006, 1, 0, 262005, 1, 0, 262004, 1, 0, 262003, 1, 0, 262002, 1, 0, 262001, 1, 0, 262000, 1, 0, 196495, 1, 0, 196493, 1, 0, 130956, 1, 0, 196491, 1, 0, 196489, 1, 0, 196487, 1, 0, 130951, 1, 0, 196485, 1, 0, 196483, 1, 0, 130946, 1, 0, -262271, 1, 0, -262272, 1, 0, -262273, 1, 0, -262274, 1, 0, 196510, 1, 0, 196512, 1, 0, 130977, 1, 0, 196514, 1, 0, 196516, 1, 0, 196518, 1, 0, 130982, 1, 0, -2555955, 196608, 2, -2555954, 196608, 2, -2555953, 196608, 2, -2555952, 196608, 2, -2555951, 196608, 2, -2555950, 196608, 2, -2555949, 196608, 2, -2555948, 196608, 2, -2555947, 196608, 2, -2555946, 196608, 2, -2555945, 196608, 2, -2555944, 196608, 2, -2555942, 196608, 2, -2555941, 196608, 2, -2555943, 196608, 2, -2555940, 196608, 2, -2555939, 196608, 2, -2555938, 196608, 2, -2555956, 196608, 2, -2555937, 131072, 0, -3080239, 0, 2, -3080238, 262144, 1, -3080237, 0, 2, -3080236, 0, 2, -3080235, 196608, 1, -3080234, 0, 2, -2555957, 262144, 2, -2555958, 196608, 0, -2621494, 196608, 0, -2687030, 196608, 0, -2752566, 196608, 0, -2818102, 131072, 0, -2490422, 131072, 0, -2490421, 131072, 0, -2490420, 131072, 0, -2490419, 131072, 0, -2490418, 131072, 0, -2490417, 131072, 0, -2490416, 131072, 0, -2490415, 131072, 0, -2490414, 131072, 0, -2490413, 131072, 0, -2490412, 131072, 0, -2490411, 131072, 0, -2490410, 131072, 0, -2490409, 131072, 0, -2490408, 131072, 0, -2490407, 131072, 0, -2490406, 131072, 0, -2490405, 131072, 0, -2490404, 131072, 0, -2490403, 131072, 0, -2490402, 131072, 0, -2490401, 131072, 0, -2490400, 131072, 0, -2424865, 131072, 0, -2424866, 131072, 0, -2424867, 131072, 0, -2424868, 131072, 0, -2424869, 131072, 0, -2424870, 131072, 0, -2424871, 131072, 0, -2424872, 131072, 0, -2424873, 131072, 0, -2424874, 131072, 0, -2424875, 131072, 0, -2424876, 131072, 0, -2424877, 131072, 0, -2424878, 131072, 0, -2424879, 131072, 0, -2424880, 131072, 0, -2424881, 131072, 0, -2424882, 131072, 0, -2359346, 131072, 0, -2424883, 131072, 0, -2424884, 131072, 0, -2424885, 131072, 0, -2424886, 131072, 0, -2424887, 131072, 0, -2359351, 131072, 0, -2359350, 131072, 0, -2293813, 131072, 0, -2293812, 131072, 0, -2293811, 131072, 0, -2293810, 131072, 0, -2293809, 131072, 0, -2293808, 131072, 0, -2293807, 131072, 0, -2293806, 131072, 0, -2359341, 131072, 0, -2359340, 131072, 0, -2359339, 131072, 0, -2293802, 131072, 0, -2293803, 131072, 0, -2359342, 131072, 0, -2359343, 131072, 0, -2359344, 131072, 0, -2359345, 131072, 0, -2359347, 131072, 0, -2359348, 131072, 0, -2359349, 131072, 0, -2359338, 131072, 0, -2293805, 131072, 0, -2293804, 131072, 0, -2228266, 131072, 0, -2228265, 131072, 0, -2228264, 131072, 0, -2228263, 131072, 0, -2293801, 131072, 0, -2293800, 131072, 0, -2293799, 131072, 0, -2293798, 131072, 0, -2359337, 131072, 0, -2359336, 131072, 0, -2359335, 131072, 0, -2359334, 131072, 0, -2359333, 131072, 0, -2359332, 131072, 0, -2359331, 131072, 0, -2359330, 131072, 0, -2359329, 131072, 0, -2359328, 131072, 0, -2359327, 131072, 0, -2424864, 131072, 0, -2621473, 131072, 0, -2687009, 131072, 0, -2752545, 131072, 0, -2818081, 131072, 0, -2818080, 131072, 0, -2818079, 131072, 0, -2752543, 131072, 0, -2687007, 131072, 0, -2621471, 131072, 0, -2555935, 131072, 0, -2490399, 131072, 0, -2424863, 131072, 0, -2687008, 131072, 0, -2752544, 131072, 0, -2621472, 131072, 0, -2555936, 131072, 0, -2293792, 131072, 0, -2293791, 131072, 0, -2228255, 131072, 0, -2162719, 131072, 0, -2162720, 131072, 0, -2162721, 131072, 0, -2097185, 131072, 0, -2097186, 131072, 0, -2162723, 131072, 0, -2162724, 131072, 0, -2162725, 131072, 0, -2162726, 131072, 0, -2162727, 131072, 0, -2162728, 131072, 0, -2162729, 131072, 0, -2162730, 131072, 0, -2162722, 131072, 0, -2228257, 131072, 0, -2228258, 131072, 0, -2228259, 131072, 0, -2228260, 131072, 0, -2293794, 131072, 0, -2293793, 131072, 0, -2228256, 131072, 0, -2293796, 131072, 0, -2293797, 131072, 0, -2228262, 131072, 0, -2293795, 131072, 0, -2228261, 131072, 0, -2228267, 131072, 0, -2228268, 131072, 0, -2228269, 131072, 0, -2228270, 131072, 0, -2228271, 131072, 0, -2228272, 131072, 0, -2228273, 131072, 0, -2228274, 131072, 0, -2228275, 131072, 0, -2228276, 131072, 0, -2228277, 131072, 0, -2228278, 131072, 0, -2228279, 131072, 0, -2293815, 131072, 0, -2293814, 131072, 0, -2228280, 131072, 0, -2162742, 131072, 0, -2162741, 131072, 0, -2162740, 131072, 0, -2162739, 131072, 0, -2162738, 131072, 0, -2162737, 131072, 0, -2162736, 131072, 0, -2162735, 131072, 0, -2162734, 131072, 0, -2162733, 131072, 0, -2162732, 131072, 0, -2162731, 131072, 0, -2097183, 131072, 0, -2097184, 131072, 0, -2097187, 131072, 0, -2097188, 131072, 0, -2097189, 131072, 0, -2097190, 131072, 0, -2097191, 131072, 0, -2097192, 131072, 0, -2097193, 131072, 0, -2097194, 131072, 0, -2097195, 131072, 0, -2097196, 131072, 0, -2097197, 131072, 0, -2097198, 131072, 0, -2097199, 131072, 0, -2097200, 131072, 0, -2097201, 131072, 0, -2097202, 131072, 0, -2097203, 131072, 0, -2097204, 131072, 0, -2097205, 131072, 0, -2097206, 131072, 0, -2097207, 131072, 0, -2097208, 131072, 0, -2162744, 131072, 0, -2162743, 131072, 0, -2097209, 131072, 0, -2162745, 131072, 0, -2228281, 131072, 0, -2293817, 131072, 0, -2359353, 131072, 0, -2424889, 131072, 0, -2490425, 131072, 0, -2490424, 131072, 0, -2555960, 131072, 0, -2621496, 131072, 0, -2687032, 131072, 0, -2752568, 131072, 0, -2883638, 131072, 0, -2949174, 131072, 0, -3014710, 131072, 0, -3080246, 131072, 0, -3145782, 131072, 0, -3211318, 131072, 0, -3276854, 131072, 0, -2490423, 131072, 0, -2555959, 131072, 0, -2621495, 131072, 0, -2687031, 131072, 0, -2752567, 131072, 0, -2818103, 131072, 0, -2883639, 131072, 0, -2949175, 131072, 0, -3014711, 131072, 0, -3080247, 131072, 0, -3145783, 131072, 0, -3211319, 131072, 0, -3276855, 131072, 0, -2424888, 131072, 0, -2359352, 131072, 0, -2293816, 131072, 0, -2097210, 131072, 0, -2162746, 131072, 0, -2162747, 131072, 0, -2228283, 131072, 0, -2293819, 131072, 0, -2293818, 131072, 0, -2359354, 131072, 0, -2424890, 131072, 0, -2490426, 131072, 0, -2555962, 131072, 0, -2621498, 131072, 0, -2687034, 131072, 0, -2752570, 131072, 0, -2818106, 131072, 0, -2818105, 131072, 0, -2228282, 131072, 0, -2097211, 131072, 0, -2359355, 131072, 0, -2424891, 131072, 0, -2490427, 131072, 0, -2555963, 131072, 0, -2621499, 131072, 0, -2687035, 131072, 0, -2752571, 131072, 0, -2818107, 131072, 0, -2228284, 131072, 0, -2162748, 131072, 0, -2097212, 131072, 0, -2097213, 131072, 0, -2097214, 131072, 0, -2097215, 131072, 0, -2097216, 131072, 0, -2097217, 131072, 0, -2097218, 131072, 0, -2162749, 131072, 0, -2228285, 131072, 0, -2293821, 131072, 0, -2359357, 131072, 0, -2424893, 131072, 0, -2490429, 131072, 0, -2555965, 131072, 0, -2621501, 131072, 0, -2687037, 131072, 0, -2752573, 131072, 0, -2293820, 131072, 0, -2359356, 131072, 0, -2424892, 131072, 0, -2490428, 131072, 0, -2555964, 131072, 0, -2162754, 131072, 0, -2949186, 131072, 0, -2883650, 131072, 0, -2818114, 131072, 0, -2752578, 131072, 0, -2687042, 131072, 0, -2621506, 131072, 0, -2555970, 131072, 0, -2490434, 131072, 0, -2424898, 131072, 0, -2359362, 131072, 0, -2293826, 131072, 0, -2228290, 131072, 0, -2162753, 131072, 0, -2228289, 131072, 0, -2293824, 131072, 0, -2359360, 131072, 0, -2424896, 131072, 0, -2424895, 131072, 0, -2490431, 131072, 0, -2555967, 131072, 0, -2621503, 131072, 0, -2162750, 131072, 0, -2228286, 131072, 0, -2293822, 131072, 0, -2359359, 131072, 0, -2621504, 131072, 0, -2687040, 131072, 0, -2752576, 131072, 0, -2818112, 131072, 0, -2883649, 131072, 0, -2949185, 131072, 0, -3014720, 131072, 0, -2949184, 131072, 0, -2883648, 131072, 0, -2555968, 131072, 0, -2490432, 131072, 0, -2228288, 131072, 0, -2162752, 131072, 0, -3014719, 131072, 0, -2949183, 131072, 0, -2883647, 131072, 0, -2818111, 131072, 0, -2752575, 131072, 0, -2687039, 131072, 0, -2293823, 131072, 0, -2228287, 131072, 0, -2162751, 131072, 0, -3014718, 131072, 0, -2949182, 131072, 0, -2883646, 131072, 0, -2818110, 131072, 0, -2752574, 131072, 0, -2687038, 131072, 0, -2621502, 131072, 0, -2555966, 131072, 0, -2490430, 131072, 0, -2424894, 131072, 0, -2359358, 131072, 0, -3014717, 131072, 0, -2949181, 131072, 0, -2883645, 131072, 0, -2818109, 131072, 0, -3014716, 131072, 0, -2949180, 131072, 0, -2883644, 131072, 0, -2818108, 131072, 0, -2752572, 131072, 0, -2687036, 131072, 0, -2621500, 131072, 0, -3014715, 131072, 0, -2949179, 131072, 0, -2883643, 131072, 0, -3014714, 131072, 0, -2949178, 131072, 0, -2883642, 131072, 0, -3014713, 131072, 0, -2949177, 131072, 0, -2883641, 131072, 0, -2752569, 131072, 0, -2687033, 131072, 0, -2621497, 131072, 0, -2555961, 131072, 0, -3014712, 131072, 0, -2949176, 131072, 0, -2883640, 131072, 0, -2818104, 131072, 0, -2293825, 131072, 0, -2359361, 131072, 0, -2424897, 131072, 0, -2490433, 131072, 0, -2555969, 131072, 0, -2621505, 131072, 0, -2687041, 131072, 0, -2752577, 131072, 0, -2818113, 131072, 0, -3604546, 131072, 0, -3539010, 131072, 0, -3473474, 131072, 0, -3407938, 131072, 0, -3342402, 131072, 0, -3276866, 131072, 0, -3211330, 131072, 0, -3145794, 131072, 0, -3080258, 131072, 0, -3014722, 131072, 0, -3604545, 131072, 0, -3539009, 131072, 0, -3473473, 131072, 0, -3407937, 131072, 0, -3342401, 131072, 0, -3276865, 131072, 0, -3211329, 131072, 0, -3145793, 131072, 0, -3080257, 131072, 0, -3014721, 131072, 0, -3604544, 131072, 0, -3539008, 131072, 0, -3473472, 131072, 0, -3407936, 131072, 0, -3342400, 131072, 0, -3276864, 131072, 0, -3211328, 131072, 0, -3145792, 131072, 0, -3080256, 131072, 0, -3604543, 131072, 0, -3539007, 131072, 0, -3473471, 131072, 0, -3407935, 131072, 0, -3342399, 131072, 0, -3276863, 131072, 0, -3211327, 131072, 0, -3145791, 131072, 0, -3080255, 131072, 0, -3604542, 131072, 0, -3539006, 131072, 0, -3473470, 131072, 0, -3407934, 131072, 0, -3342398, 131072, 0, -3276862, 131072, 0, -3211326, 131072, 0, -3145790, 131072, 0, -3080254, 131072, 0, -3604541, 131072, 0, -3539005, 131072, 0, -3473469, 131072, 0, -3407933, 131072, 0, -3342397, 131072, 0, -3276861, 131072, 0, -3211325, 131072, 0, -3145789, 131072, 0, -3080253, 131072, 0, -3604540, 131072, 0, -3539004, 131072, 0, -3473468, 131072, 0, -3407932, 131072, 0, -3342396, 131072, 0, -3276860, 131072, 0, -3211324, 131072, 0, -3145788, 131072, 0, -3080252, 131072, 0, -3604539, 131072, 0, -3539003, 131072, 0, -3473467, 131072, 0, -3407931, 131072, 0, -3342395, 131072, 0, -3276859, 131072, 0, -3211323, 131072, 0, -3145787, 131072, 0, -3080251, 131072, 0, -3604538, 131072, 0, -3539002, 131072, 0, -3473466, 131072, 0, -3407930, 131072, 0, -3342394, 131072, 0, -3276858, 131072, 0, -3211322, 131072, 0, -3145786, 131072, 0, -3080250, 131072, 0, -3604537, 131072, 0, -3539001, 131072, 0, -3473465, 131072, 0, -3407929, 131072, 0, -3342393, 131072, 0, -3276857, 131072, 0, -3211321, 131072, 0, -3145785, 131072, 0, -3080249, 131072, 0, -3604536, 131072, 0, -3539000, 131072, 0, -3473464, 131072, 0, -3407928, 131072, 0, -3342392, 131072, 0, -3276856, 131072, 0, -3211320, 131072, 0, -3145784, 131072, 0, -3080248, 131072, 0, -3604535, 131072, 0, -3538999, 131072, 0, -3473463, 131072, 0, -3407927, 131072, 0, -3342391, 131072, 0, -3604534, 131072, 0, -3538998, 131072, 0, -3473462, 131072, 0, -3407926, 131072, 0, -3342390, 131072, 0, -3014689, 131072, 0, -2949153, 131072, 0, -2883617, 131072, 0, -3014688, 131072, 0, -2949152, 131072, 0, -2883616, 131072, 0, -3014687, 131072, 0, -2949151, 131072, 0, -2883615, 131072, 0, -3014686, 131072, 0, -2949150, 131072, 0, -3014685, 131072, 0, -2949149, 131072, 0, -3014684, 131072, 0, -2949148, 131072, 0, -3014683, 131072, 0, -2949147, 131072, 0, -3014682, 131072, 0, -2949146, 131072, 0, -3014681, 131072, 0, -2949145, 131072, 0, -2555929, 131072, 0, -2490393, 131072, 0, -2424857, 131072, 0, -2359321, 131072, 0, -2293785, 131072, 0, -2228249, 131072, 0, -2162713, 131072, 0, -2097177, 131072, 0, -3014680, 131072, 0, -2949144, 131072, 0, -2555928, 131072, 0, -2490392, 131072, 0, -2424856, 131072, 0, -2359320, 131072, 0, -2293784, 131072, 0, -2228248, 131072, 0, -2162712, 131072, 0, -2097176, 131072, 0, -3014679, 131072, 0, -2949143, 131072, 0, -2555927, 131072, 0, -2490391, 131072, 0, -2424855, 131072, 0, -2359319, 131072, 0, -2293783, 131072, 0, -2228247, 131072, 0, -2162711, 131072, 0, -2097175, 131072, 0, -3014678, 131072, 0, -2949142, 131072, 0, -2555926, 131072, 0, -2490390, 131072, 0, -2424854, 131072, 0, -2359318, 131072, 0, -2293782, 131072, 0, -2228246, 131072, 0, -2162710, 131072, 0, -2097174, 131072, 0, -3014677, 131072, 0, -2949141, 131072, 0, -2555925, 131072, 0, -2490389, 131072, 0, -2424853, 131072, 0, -2359317, 131072, 0, -2293781, 131072, 0, -2228245, 131072, 0, -2162709, 131072, 0, -2097173, 131072, 0, -3014676, 131072, 0, -2949140, 131072, 0, -2555924, 131072, 0, -2490388, 131072, 0, -2424852, 131072, 0, -2359316, 131072, 0, -2293780, 131072, 0, -2228244, 131072, 0, -2162708, 131072, 0, -2097172, 131072, 0, -2031682, 131072, 0, -1966146, 131072, 0, -1900610, 131072, 0, -1835074, 131072, 0, -1769538, 131072, 0, -1704002, 131072, 0, -1638466, 131072, 0, -1572930, 131072, 0, -1507394, 131072, 0, -1441858, 131072, 0, -2031681, 131072, 0, -1966145, 131072, 0, -1900609, 131072, 0, -1835073, 131072, 0, -1769537, 131072, 0, -1704001, 131072, 0, -1638465, 131072, 0, -1572929, 131072, 0, -1507393, 131072, 0, -1441857, 131072, 0, -2031680, 131072, 0, -1966144, 131072, 0, -1900608, 131072, 0, -1835072, 131072, 0, -1769536, 131072, 0, -1704000, 131072, 0, -1638464, 131072, 0, -1572928, 131072, 0, -1507392, 131072, 0, -1441856, 131072, 0, -2031679, 131072, 0, -1966143, 131072, 0, -1900607, 131072, 0, -1835071, 131072, 0, -1769535, 131072, 0, -1703999, 131072, 0, -1638463, 131072, 0, -1572927, 131072, 0, -1507391, 131072, 0, -1441855, 131072, 0, -2031678, 131072, 0, -1966142, 131072, 0, -1900606, 131072, 0, -1835070, 131072, 0, -1769534, 131072, 0, -1703998, 131072, 0, -1638462, 131072, 0, -1572926, 131072, 0, -1507390, 131072, 0, -1441854, 131072, 0, -2031677, 131072, 0, -1966141, 131072, 0, -1900605, 131072, 0, -1835069, 131072, 0, -1769533, 131072, 0, -1703997, 131072, 0, -1638461, 131072, 0, -1572925, 131072, 0, -1507389, 131072, 0, -1441853, 131072, 0, -2031676, 131072, 0, -1966140, 131072, 0, -1900604, 131072, 0, -1835068, 131072, 0, -1769532, 131072, 0, -1703996, 131072, 0, -1638460, 131072, 0, -1572924, 131072, 0, -1507388, 131072, 0, -1441852, 131072, 0, -2031675, 131072, 0, -1966139, 131072, 0, -1900603, 131072, 0, -1835067, 131072, 0, -1769531, 131072, 0, -1703995, 131072, 0, -1638459, 131072, 0, -1572923, 131072, 0, -1507387, 131072, 0, -1441851, 131072, 0, -2031674, 131072, 0, -1966138, 131072, 0, -1900602, 131072, 0, -1835066, 131072, 0, -1769530, 131072, 0, -1703994, 131072, 0, -1638458, 131072, 0, -1572922, 131072, 0, -1507386, 131072, 0, -1441850, 131072, 0, -2031673, 131072, 0, -1966137, 131072, 0, -1900601, 131072, 0, -1835065, 131072, 0, -1769529, 131072, 0, -1703993, 131072, 0, -1638457, 131072, 0, -1572921, 131072, 0, -1507385, 131072, 0, -1441849, 131072, 0, -2031672, 131072, 0, -1966136, 131072, 0, -1900600, 131072, 0, -1835064, 131072, 0, -1769528, 131072, 0, -1703992, 131072, 0, -1638456, 131072, 0, -1572920, 131072, 0, -1507384, 131072, 0, -1441848, 131072, 0, -2031671, 131072, 0, -1966135, 131072, 0, -1900599, 131072, 0, -1835063, 131072, 0, -1769527, 131072, 0, -1703991, 131072, 0, -1638455, 131072, 0, -1572919, 131072, 0, -1507383, 131072, 0, -1441847, 131072, 0, -2031670, 131072, 0, -1966134, 131072, 0, -1900598, 131072, 0, -1835062, 131072, 0, -1769526, 131072, 0, -1703990, 131072, 0, -1638454, 131072, 0, -1572918, 131072, 0, -1507382, 131072, 0, -1441846, 131072, 0, -2031669, 131072, 0, -1966133, 131072, 0, -1900597, 131072, 0, -1835061, 131072, 0, -1769525, 131072, 0, -1703989, 131072, 0, -1638453, 131072, 0, -1572917, 131072, 0, -1507381, 131072, 0, -1441845, 131072, 0, -2031668, 131072, 0, -1966132, 131072, 0, -1900596, 131072, 0, -1835060, 131072, 0, -1769524, 131072, 0, -1703988, 131072, 0, -1638452, 131072, 0, -1572916, 131072, 0, -1507380, 131072, 0, -1441844, 131072, 0, -2031667, 131072, 0, -1966131, 131072, 0, -1900595, 131072, 0, -1835059, 131072, 0, -1769523, 131072, 0, -1703987, 131072, 0, -1638451, 131072, 0, -1572915, 131072, 0, -1507379, 131072, 0, -1441843, 131072, 0, -2031666, 131072, 0, -1966130, 131072, 0, -1900594, 131072, 0, -1835058, 131072, 0, -1769522, 131072, 0, -1703986, 131072, 0, -1638450, 131072, 0, -1572914, 131072, 0, -1507378, 131072, 0, -1441842, 131072, 0, -2031665, 131072, 0, -1966129, 131072, 0, -1900593, 131072, 0, -1835057, 131072, 0, -1769521, 131072, 0, -1703985, 131072, 0, -1638449, 131072, 0, -1572913, 131072, 0, -1507377, 131072, 0, -1441841, 131072, 0, -2031664, 131072, 0, -1966128, 131072, 0, -1900592, 131072, 0, -1835056, 131072, 0, -1769520, 131072, 0, -1703984, 131072, 0, -1638448, 131072, 0, -1572912, 131072, 0, -1507376, 131072, 0, -1441840, 131072, 0, -2031663, 131072, 0, -1966127, 131072, 0, -1900591, 131072, 0, -1835055, 131072, 0, -1769519, 131072, 0, -1703983, 131072, 0, -1638447, 131072, 0, -1572911, 131072, 0, -1507375, 131072, 0, -1441839, 131072, 0, -2031662, 131072, 0, -1966126, 131072, 0, -1900590, 131072, 0, -1835054, 131072, 0, -1769518, 131072, 0, -1703982, 131072, 0, -1638446, 131072, 0, -1572910, 131072, 0, -1507374, 131072, 0, -1441838, 131072, 0, -2031661, 131072, 0, -1966125, 131072, 0, -1900589, 131072, 0, -1835053, 131072, 0, -1769517, 131072, 0, -1703981, 131072, 0, -1638445, 131072, 0, -1572909, 131072, 0, -1507373, 131072, 0, -1441837, 131072, 0, -2031660, 131072, 0, -1966124, 131072, 0, -1900588, 131072, 0, -1835052, 131072, 0, -1769516, 131072, 0, -1703980, 131072, 0, -1638444, 131072, 0, -1572908, 131072, 0, -1507372, 131072, 0, -1441836, 131072, 0, -2031659, 131072, 0, -1966123, 131072, 0, -1900587, 131072, 0, -1835051, 131072, 0, -1769515, 131072, 0, -1703979, 131072, 0, -1638443, 131072, 0, -1572907, 131072, 0, -1507371, 131072, 0, -1441835, 131072, 0, -2031658, 131072, 0, -1966122, 131072, 0, -1900586, 131072, 0, -1835050, 131072, 0, -1769514, 131072, 0, -1703978, 131072, 0, -1638442, 131072, 0, -1572906, 131072, 0, -1507370, 131072, 0, -1441834, 131072, 0, -2031657, 131072, 0, -1966121, 131072, 0, -1900585, 131072, 0, -1835049, 131072, 0, -1769513, 131072, 0, -1703977, 131072, 0, -1638441, 131072, 0, -1572905, 131072, 0, -1507369, 131072, 0, -1441833, 131072, 0, -2031656, 131072, 0, -1966120, 131072, 0, -1900584, 131072, 0, -1835048, 131072, 0, -1769512, 131072, 0, -1703976, 131072, 0, -1638440, 131072, 0, -1572904, 131072, 0, -1507368, 131072, 0, -1441832, 131072, 0, -2031655, 131072, 0, -1966119, 131072, 0, -1900583, 131072, 0, -1835047, 131072, 0, -1769511, 131072, 0, -1703975, 131072, 0, -1638439, 131072, 0, -1572903, 131072, 0, -1507367, 131072, 0, -1441831, 131072, 0, -2031654, 131072, 0, -1966118, 131072, 0, -1900582, 131072, 0, -1835046, 131072, 0, -1769510, 131072, 0, -1703974, 131072, 0, -1638438, 131072, 0, -1572902, 131072, 0, -1507366, 131072, 0, -1441830, 131072, 0, -2031653, 131072, 0, -1966117, 131072, 0, -1900581, 131072, 0, -1835045, 131072, 0, -1769509, 131072, 0, -1703973, 131072, 0, -1638437, 131072, 0, -1572901, 131072, 0, -1507365, 131072, 0, -1441829, 131072, 0, -2031652, 131072, 0, -1966116, 131072, 0, -1900580, 131072, 0, -1835044, 131072, 0, -1769508, 131072, 0, -1703972, 131072, 0, -1638436, 131072, 0, -1572900, 131072, 0, -1507364, 131072, 0, -1441828, 131072, 0, -2031651, 131072, 0, -1966115, 131072, 0, -1900579, 131072, 0, -1835043, 131072, 0, -1769507, 131072, 0, -1703971, 131072, 0, -1638435, 131072, 0, -1572899, 131072, 0, -1507363, 131072, 0, -1441827, 131072, 0, -2031650, 131072, 0, -1966114, 131072, 0, -1900578, 131072, 0, -1835042, 131072, 0, -1769506, 131072, 0, -1703970, 131072, 0, -1638434, 131072, 0, -1572898, 131072, 0, -1507362, 131072, 0, -1441826, 131072, 0, -2031649, 131072, 0, -1966113, 131072, 0, -1900577, 131072, 0, -1835041, 131072, 0, -1769505, 131072, 0, -1703969, 131072, 0, -1638433, 131072, 0, -1572897, 131072, 0, -1507361, 131072, 0, -1441825, 131072, 0, -2031648, 131072, 0, -1966112, 131072, 0, -1900576, 131072, 0, -1835040, 131072, 0, -1769504, 131072, 0, -1703968, 131072, 0, -1638432, 131072, 0, -1572896, 131072, 0, -1507360, 131072, 0, -1441824, 131072, 0, -2031647, 131072, 0, -1966111, 131072, 0, -1900575, 131072, 0, -1835039, 131072, 0, -1769503, 131072, 0, -1703967, 131072, 0, -1638431, 131072, 0, -1572895, 131072, 0, -1507359, 131072, 0, -1441823, 131072, 0, -2031641, 131072, 0, -1966105, 131072, 0, -1900569, 131072, 0, -1835033, 131072, 0, -1769497, 131072, 0, -1703961, 131072, 0, -1638425, 131072, 0, -1572889, 131072, 0, -1507353, 131072, 0, -1441817, 131072, 0, -2031640, 131072, 0, -1966104, 131072, 0, -1900568, 131072, 0, -1835032, 131072, 0, -1769496, 131072, 0, -1703960, 131072, 0, -1638424, 131072, 0, -1572888, 131072, 0, -1507352, 131072, 0, -1441816, 131072, 0, -2031639, 131072, 0, -1966103, 131072, 0, -1900567, 131072, 0, -1835031, 131072, 0, -1769495, 131072, 0, -1703959, 131072, 0, -1638423, 131072, 0, -1572887, 131072, 0, -1507351, 131072, 0, -1441815, 131072, 0, -2031638, 131072, 0, -1966102, 131072, 0, -1900566, 131072, 0, -1835030, 131072, 0, -1769494, 131072, 0, -1703958, 131072, 0, -1638422, 131072, 0, -1572886, 131072, 0, -1507350, 131072, 0, -1441814, 131072, 0, -2031637, 131072, 0, -1966101, 131072, 0, -1900565, 131072, 0, -1835029, 131072, 0, -1769493, 131072, 0, -1703957, 131072, 0, -1638421, 131072, 0, -1572885, 131072, 0, -1507349, 131072, 0, -1441813, 131072, 0, -2031636, 131072, 0, -1966100, 131072, 0, -1900564, 131072, 0, -1835028, 131072, 0, -1769492, 131072, 0, -1703956, 131072, 0, -1638420, 131072, 0, -1572884, 131072, 0, -1507348, 131072, 0, -1441812, 131072, 0, -3014675, 131072, 0, -2949139, 131072, 0, -2555923, 131072, 0, -2490387, 131072, 0, -2424851, 131072, 0, -2359315, 131072, 0, -2293779, 131072, 0, -2228243, 131072, 0, -2162707, 131072, 0, -2097171, 131072, 0, -2031635, 131072, 0, -1966099, 131072, 0, -1900563, 131072, 0, -1835027, 131072, 0, -1769491, 131072, 0, -1703955, 131072, 0, -1638419, 131072, 0, -1572883, 131072, 0, -1507347, 131072, 0, -1441811, 131072, 0, -3014674, 131072, 0, -2949138, 131072, 0, -2555922, 131072, 0, -2490386, 131072, 0, -2424850, 131072, 0, -2359314, 131072, 0, -2293778, 131072, 0, -2228242, 131072, 0, -2162706, 131072, 0, -2097170, 131072, 0, -2031634, 131072, 0, -1966098, 131072, 0, -1900562, 131072, 0, -1835026, 131072, 0, -1769490, 131072, 0, -1703954, 131072, 0, -1638418, 131072, 0, -1572882, 131072, 0, -1507346, 131072, 0, -1441810, 131072, 0, -3014673, 131072, 0, -2949137, 131072, 0, -2555921, 131072, 0, -2490385, 131072, 0, -2424849, 131072, 0, -2359313, 131072, 0, -2293777, 131072, 0, -2228241, 131072, 0, -2162705, 131072, 0, -2097169, 131072, 0, -2031633, 131072, 0, -1966097, 131072, 0, -1900561, 131072, 0, -1835025, 131072, 0, -1769489, 131072, 0, -1703953, 131072, 0, -1638417, 131072, 0, -1572881, 131072, 0, -1507345, 131072, 0, -1441809, 131072, 0, -3014672, 131072, 0, -2949136, 131072, 0, -2555920, 131072, 0, -2490384, 131072, 0, -2424848, 131072, 0, -2359312, 131072, 0, -2293776, 131072, 0, -2228240, 131072, 0, -2162704, 131072, 0, -2097168, 131072, 0, -2031632, 131072, 0, -1966096, 131072, 0, -1900560, 131072, 0, -1835024, 131072, 0, -1769488, 131072, 0, -1703952, 131072, 0, -1638416, 131072, 0, -1572880, 131072, 0, -1507344, 131072, 0, -1441808, 131072, 0, -3014671, 131072, 0, -2949135, 131072, 0, -2555919, 131072, 0, -2490383, 131072, 0, -2424847, 131072, 0, -2359311, 131072, 0, -2293775, 131072, 0, -2228239, 131072, 0, -2162703, 131072, 0, -2097167, 131072, 0, -2031631, 131072, 0, -1966095, 131072, 0, -1900559, 131072, 0, -1835023, 131072, 0, -1769487, 131072, 0, -1703951, 131072, 0, -1638415, 131072, 0, -1572879, 131072, 0, -1507343, 131072, 0, -1441807, 131072, 0, -3014670, 131072, 0, -2949134, 131072, 0, -2555918, 131072, 0, -2490382, 131072, 0, -2424846, 131072, 0, -2359310, 131072, 0, -2293774, 131072, 0, -2228238, 131072, 0, -2162702, 131072, 0, -2097166, 131072, 0, -2031630, 131072, 0, -1966094, 131072, 0, -1900558, 131072, 0, -1835022, 131072, 0, -1769486, 131072, 0, -1703950, 131072, 0, -1638414, 131072, 0, -1572878, 131072, 0, -1507342, 131072, 0, -1441806, 131072, 0, -3014669, 131072, 0, -2949133, 131072, 0, -2555917, 131072, 0, -2490381, 131072, 0, -2424845, 131072, 0, -2359309, 131072, 0, -2293773, 131072, 0, -2228237, 131072, 0, -2162701, 131072, 0, -2097165, 131072, 0, -2031629, 131072, 0, -1966093, 131072, 0, -1900557, 131072, 0, -1835021, 131072, 0, -1769485, 131072, 0, -1703949, 131072, 0, -1638413, 131072, 0, -1572877, 131072, 0, -1507341, 131072, 0, -1441805, 131072, 0, -3014668, 131072, 0, -2949132, 131072, 0, -2555916, 131072, 0, -2490380, 131072, 0, -2424844, 131072, 0, -2359308, 131072, 0, -2293772, 131072, 0, -2228236, 131072, 0, -2162700, 131072, 0, -2097164, 131072, 0, -2031628, 131072, 0, -1966092, 131072, 0, -1900556, 131072, 0, -1835020, 131072, 0, -1769484, 131072, 0, -1703948, 131072, 0, -1638412, 131072, 0, -1572876, 131072, 0, -1507340, 131072, 0, -1441804, 131072, 0, -3014667, 131072, 0, -2949131, 131072, 0, -2555915, 131072, 0, -2490379, 131072, 0, -2424843, 131072, 0, -2359307, 131072, 0, -2293771, 131072, 0, -2228235, 131072, 0, -2162699, 131072, 0, -2097163, 131072, 0, -2031627, 131072, 0, -1966091, 131072, 0, -1900555, 131072, 0, -1835019, 131072, 0, -1769483, 131072, 0, -1703947, 131072, 0, -1638411, 131072, 0, -1572875, 131072, 0, -1507339, 131072, 0, -1441803, 131072, 0, -3014666, 131072, 0, -2949130, 131072, 0, -2555914, 131072, 0, -2490378, 131072, 0, -2424842, 131072, 0, -2359306, 131072, 0, -2293770, 131072, 0, -2228234, 131072, 0, -2162698, 131072, 0, -2097162, 131072, 0, -2031626, 131072, 0, -1966090, 131072, 0, -1900554, 131072, 0, -1835018, 131072, 0, -1769482, 131072, 0, -1703946, 131072, 0, -1638410, 131072, 0, -1572874, 131072, 0, -1507338, 131072, 0, -1441802, 131072, 0, -3014665, 131072, 0, -2949129, 131072, 0, -2555913, 131072, 0, -2490377, 131072, 0, -2424841, 131072, 0, -2359305, 131072, 0, -2293769, 131072, 0, -2228233, 131072, 0, -2162697, 131072, 0, -2097161, 131072, 0, -2031625, 131072, 0, -1966089, 131072, 0, -1900553, 131072, 0, -1835017, 131072, 0, -1769481, 131072, 0, -1703945, 131072, 0, -1638409, 131072, 0, -1572873, 131072, 0, -1507337, 131072, 0, -1441801, 131072, 0, -3014664, 131072, 0, -2949128, 131072, 0, -2555912, 131072, 0, -2490376, 131072, 0, -2424840, 131072, 0, -2359304, 131072, 0, -2293768, 131072, 0, -2228232, 131072, 0, -2162696, 131072, 0, -2097160, 131072, 0, -2031624, 131072, 0, -1966088, 131072, 0, -1900552, 131072, 0, -1835016, 131072, 0, -1769480, 131072, 0, -1703944, 131072, 0, -1638408, 131072, 0, -1572872, 131072, 0, -1507336, 131072, 0, -1441800, 131072, 0, -3604501, 131072, 0, -3538965, 131072, 0, -3473429, 131072, 0, -3407893, 131072, 0, -3604500, 131072, 0, -3538964, 131072, 0, -3473428, 131072, 0, -3407892, 131072, 0, -3604499, 131072, 0, -3538963, 131072, 0, -3473427, 131072, 0, -3407891, 131072, 0, -3604498, 131072, 0, -3538962, 131072, 0, -3473426, 131072, 0, -3407890, 131072, 0, -3604497, 131072, 0, -3538961, 131072, 0, -3473425, 131072, 0, -3407889, 131072, 0, -3604496, 131072, 0, -3538960, 131072, 0, -3473424, 131072, 0, -3407888, 131072, 0, -3604495, 131072, 0, -3538959, 131072, 0, -3473423, 131072, 0, -3407887, 131072, 0, -3080207, 131072, 0, -3604494, 131072, 0, -3538958, 131072, 0, -3473422, 131072, 0, -3407886, 131072, 0, -3080206, 131072, 0, -3604493, 131072, 0, -3538957, 131072, 0, -3473421, 131072, 0, -3407885, 131072, 0, -3080205, 131072, 0, -3604492, 131072, 0, -3538956, 131072, 0, -3473420, 131072, 0, -3407884, 131072, 0, -3080204, 131072, 0, -3604491, 131072, 0, -3538955, 131072, 0, -3473419, 131072, 0, -3407883, 131072, 0, -3080203, 131072, 0, -3604490, 131072, 0, -3538954, 131072, 0, -3473418, 131072, 0, -3407882, 131072, 0, -3080202, 131072, 0, -3604489, 131072, 0, -3538953, 131072, 0, -3473417, 131072, 0, -3407881, 131072, 0, -3080201, 131072, 0, -3604488, 131072, 0, -3538952, 131072, 0, -3473416, 131072, 0, -3407880, 131072, 0, -3342344, 131072, 0, -3276808, 131072, 0, -3211272, 131072, 0, -3145736, 131072, 0, -3080200, 131072, 0, -4063298, 131072, 0, -3997762, 131072, 0, -3932226, 131072, 0, -3866690, 131072, 0, -3801154, 131072, 0, -3735618, 131072, 0, -3670082, 131072, 0, -4063297, 131072, 0, -3997761, 131072, 0, -3932225, 131072, 0, -3866689, 131072, 0, -3801153, 131072, 0, -3735617, 131072, 0, -3670081, 131072, 0, -4063296, 131072, 0, -3997760, 131072, 0, -3932224, 131072, 0, -3866688, 131072, 0, -3801152, 131072, 0, -3735616, 131072, 0, -3670080, 131072, 0, -4063295, 131072, 0, -3997759, 131072, 0, -3932223, 131072, 0, -3866687, 131072, 0, -3801151, 131072, 0, -3735615, 131072, 0, -3670079, 131072, 0, -4063294, 131072, 0, -3997758, 131072, 0, -3932222, 131072, 0, -3866686, 131072, 0, -3801150, 131072, 0, -3735614, 131072, 0, -3670078, 131072, 0, -4063293, 131072, 0, -3997757, 131072, 0, -3932221, 131072, 0, -3866685, 131072, 0, -3801149, 131072, 0, -3735613, 131072, 0, -3670077, 131072, 0, -4063292, 131072, 0, -3997756, 131072, 0, -3932220, 131072, 0, -3866684, 131072, 0, -3801148, 131072, 0, -3735612, 131072, 0, -3670076, 131072, 0, -4063291, 131072, 0, -3997755, 131072, 0, -3932219, 131072, 0, -3866683, 131072, 0, -3801147, 131072, 0, -3735611, 131072, 0, -3670075, 131072, 0, -4063290, 131072, 0, -3997754, 131072, 0, -3932218, 131072, 0, -3866682, 131072, 0, -3801146, 131072, 0, -3735610, 131072, 0, -3670074, 131072, 0, -4063289, 131072, 0, -3997753, 131072, 0, -3932217, 131072, 0, -3866681, 131072, 0, -3801145, 131072, 0, -3735609, 131072, 0, -3670073, 131072, 0, -4063288, 131072, 0, -3997752, 131072, 0, -3932216, 131072, 0, -3866680, 131072, 0, -3801144, 131072, 0, -3735608, 131072, 0, -3670072, 131072, 0, -4063287, 131072, 0, -3997751, 131072, 0, -3932215, 131072, 0, -3866679, 131072, 0, -3801143, 131072, 0, -3735607, 131072, 0, -3670071, 131072, 0, -4063286, 131072, 0, -3997750, 131072, 0, -3932214, 131072, 0, -3866678, 131072, 0, -3801142, 131072, 0, -3735606, 131072, 0, -3670070, 131072, 0, -4063285, 131072, 0, -3997749, 131072, 0, -3932213, 131072, 0, -3866677, 131072, 0, -3801141, 131072, 0, -3735605, 131072, 0, -3670069, 131072, 0, -4063284, 131072, 0, -3997748, 131072, 0, -3932212, 131072, 0, -3866676, 131072, 0, -3801140, 131072, 0, -3735604, 131072, 0, -3670068, 131072, 0, -4063283, 131072, 0, -3997747, 131072, 0, -3932211, 131072, 0, -3866675, 131072, 0, -3801139, 131072, 0, -3735603, 131072, 0, -3670067, 131072, 0, -4063282, 131072, 0, -3997746, 131072, 0, -3932210, 131072, 0, -3866674, 131072, 0, -3801138, 131072, 0, -3735602, 131072, 0, -3670066, 131072, 0, -3670062, 0, 2, -3670061, 0, 2, -3670060, 0, 2, -3670059, 0, 2, -3670058, 0, 2, -3670054, 0, 2, -3670053, 0, 2, -3670052, 0, 2, -3670051, 0, 2, -4063266, 131072, 0, -3997730, 131072, 0, -3932194, 131072, 0, -3866658, 131072, 0, -3801122, 131072, 0, -3735586, 131072, 0, -3670050, 131072, 0, -4063265, 131072, 0, -3997729, 131072, 0, -3932193, 131072, 0, -3866657, 131072, 0, -3801121, 131072, 0, -3735585, 131072, 0, -3670049, 131072, 0, -3801109, 196608, 2, -3735573, 131072, 0, -3670037, 131072, 0, -3801108, 196608, 2, -3735572, 131072, 0, -3670036, 131072, 0, -3801107, 196608, 2, -3735571, 131072, 0, -3670035, 131072, 0, -3801106, 196608, 2, -3735570, 131072, 0, -3670034, 131072, 0, -3801105, 196608, 2, -3735569, 131072, 0, -3670033, 131072, 0, -3801104, 196608, 2, -3735568, 131072, 0, -3670032, 131072, 0, -3801103, 196608, 2, -3735567, 131072, 0, -3670031, 131072, 0, -3801102, 196608, 2, -3735566, 131072, 0, -3670030, 131072, 0, -3801101, 196608, 2, -3735565, 131072, 0, -3670029, 131072, 0, -3801100, 196608, 2, -3735564, 131072, 0, -3670028, 131072, 0, -3801099, 196608, 2, -3735563, 131072, 0, -3670027, 131072, 0, -3801098, 196608, 2, -3735562, 131072, 0, -3670026, 131072, 0, -3801097, 196608, 2, -3735561, 131072, 0, -3670025, 131072, 0, -3801096, 196608, 2, -3735560, 131072, 0, -3670024, 131072, 0, -3080225, 196608, 2, -3080224, 196608, 2, -3080223, 196608, 2, -3080222, 196608, 2, -3080221, 196608, 2, -3080220, 196608, 2, -3080219, 196608, 2, -3080218, 196608, 2, -3080217, 196608, 2, -3080216, 196608, 2, -3080215, 196608, 2, -3080214, 196608, 2, -3080213, 196608, 2, -3080212, 196608, 2, -3080211, 196608, 2, -3080210, 196608, 2, -3080209, 196608, 2, -3080208, 196608, 2, -3080240, 196608, 1, -3080241, 262144, 1, -2621493, 0, 3, -2621492, 0, 3, -2621491, 0, 3, -3670043, 131072, 0, -3670044, 131072, 0, -3670045, 131072, 0, -3670046, 131072, 0, -3670047, 131072, 0, -3670048, 131072, 0, -3735584, 131072, 0, -3801120, 131072, 0, -3866656, 131072, 0, -3932192, 131072, 0, -3997728, 131072, 0, -4063264, 131072, 0, -4063262, 131072, 0, -4063261, 131072, 0, -4063260, 131072, 0, -3997724, 131072, 0, -3997723, 131072, 0, -3932187, 131072, 0, -3866651, 131072, 0, -3801115, 131072, 0, -3735579, 131072, 0, -3735580, 131072, 0, -3735581, 131072, 0, -3735582, 131072, 0, -3801118, 131072, 0, -3801119, 131072, 0, -3866655, 131072, 0, -3932191, 131072, 0, -4063263, 131072, 0, -3997727, 131072, 0, -3735583, 131072, 0, -3866654, 131072, 0, -3932190, 131072, 0, -3997726, 131072, 0, -3997725, 131072, 0, -3932189, 131072, 0, -3866653, 131072, 0, -3801117, 131072, 0, -3866652, 131072, 0, -3932188, 131072, 0, -4063259, 131072, 0, -3801116, 131072, 0, -4128834, 131072, 0, -4128833, 131072, 0, -4128832, 131072, 0, -4128831, 131072, 0, -4128830, 131072, 0, -4128829, 131072, 0, -4128828, 131072, 0, -4128827, 131072, 0, -4128826, 131072, 0, -4325442, 131072, 0, -4259906, 131072, 0, -4194370, 131072, 0, -4325441, 131072, 0, -4259905, 131072, 0, -4194369, 131072, 0, -4325440, 131072, 0, -4259904, 131072, 0, -4194368, 131072, 0, -4325439, 131072, 0, -4259903, 131072, 0, -4194367, 131072, 0, -4325438, 131072, 0, -4259902, 131072, 0, -4194366, 131072, 0, -4325437, 131072, 0, -4259901, 131072, 0, -4194365, 131072, 0, -4325436, 131072, 0, -4259900, 131072, 0, -4194364, 131072, 0, -4325435, 131072, 0, -4259899, 131072, 0, -4194363, 131072, 0, -4325434, 131072, 0, -4259898, 131072, 0, -4194362, 131072, 0, -4325433, 131072, 0, -4259897, 131072, 0, -4194361, 131072, 0, -4128825, 131072, 0, -4325432, 131072, 0, -4259896, 131072, 0, -4194360, 131072, 0, -4128824, 131072, 0, -4325431, 131072, 0, -4259895, 131072, 0, -4194359, 131072, 0, -4128823, 131072, 0, -4325430, 131072, 0, -4259894, 131072, 0, -4194358, 131072, 0, -4128822, 131072, 0, -4325429, 131072, 0, -4259893, 131072, 0, -4194357, 131072, 0, -4128821, 131072, 0, -4325428, 131072, 0, -4259892, 131072, 0, -4194356, 131072, 0, -4128820, 131072, 0, -4325427, 131072, 0, -4259891, 131072, 0, -4194355, 131072, 0, -4128819, 131072, 0, -4325426, 131072, 0, -4259890, 131072, 0, -4194354, 131072, 0, -4128818, 131072, 0, -4325425, 131072, 0, -4259889, 131072, 0, -4194353, 131072, 0, -4325424, 131072, 0, -4259888, 131072, 0, -4194352, 131072, 0, -4325423, 131072, 0, -4259887, 131072, 0, -4194351, 131072, 0, -4325422, 131072, 0, -4259886, 131072, 0, -4194350, 131072, 0, -4325421, 131072, 0, -4259885, 131072, 0, -4194349, 131072, 0, -4325420, 131072, 0, -4259884, 131072, 0, -4194348, 131072, 0, -4325419, 131072, 0, -4259883, 131072, 0, -4194347, 131072, 0, -4325418, 131072, 0, -4259882, 131072, 0, -4194346, 131072, 0, -4325417, 131072, 0, -4259881, 131072, 0, -4194345, 131072, 0, -4325416, 131072, 0, -4259880, 131072, 0, -4194344, 131072, 0, -4325415, 131072, 0, -4259879, 131072, 0, -4194343, 131072, 0, -4325414, 131072, 0, -4259878, 131072, 0, -4194342, 131072, 0, -4325413, 131072, 0, -4259877, 131072, 0, -4194341, 131072, 0, -4325412, 131072, 0, -4259876, 131072, 0, -4194340, 131072, 0, -4325411, 131072, 0, -4259875, 131072, 0, -4194339, 131072, 0, -4325410, 131072, 0, -4259874, 131072, 0, -4194338, 131072, 0, -4128802, 131072, 0, -4325409, 131072, 0, -4259873, 131072, 0, -4194337, 131072, 0, -4128801, 131072, 0, -4325408, 131072, 0, -4259872, 131072, 0, -4194336, 131072, 0, -4128800, 131072, 0, -4325407, 131072, 0, -4259871, 131072, 0, -4194335, 131072, 0, -4128799, 131072, 0, -4325406, 131072, 0, -4259870, 131072, 0, -4194334, 131072, 0, -4128798, 131072, 0, -4325405, 131072, 0, -4259869, 131072, 0, -4194333, 131072, 0, -4128797, 131072, 0, -4325404, 131072, 0, -4259868, 131072, 0, -4194332, 131072, 0, -4128796, 131072, 0, -4325403, 131072, 0, -4259867, 131072, 0, -4194331, 131072, 0, -4128795, 131072, 0, -4390933, 131072, 0, -4325397, 131072, 0, -4259861, 131072, 0, -4390932, 131072, 0, -4325396, 131072, 0, -4259860, 131072, 0, -4390931, 131072, 0, -4325395, 131072, 0, -4259859, 131072, 0, -4390930, 131072, 0, -4325394, 131072, 0, -4259858, 131072, 0, -4390929, 131072, 0, -4325393, 131072, 0, -4259857, 131072, 0, -4390928, 131072, 0, -4325392, 131072, 0, -4259856, 131072, 0, -4390927, 131072, 0, -4325391, 131072, 0, -4259855, 131072, 0, -4390926, 131072, 0, -4325390, 131072, 0, -4259854, 131072, 0, -4390925, 131072, 0, -4325389, 131072, 0, -4259853, 131072, 0, -4390924, 131072, 0, -4325388, 131072, 0, -4259852, 131072, 0, -4390923, 131072, 0, -4325387, 131072, 0, -4259851, 131072, 0, -4390922, 131072, 0, -4325386, 131072, 0, -4259850, 131072, 0, -4390921, 131072, 0, -4325385, 131072, 0, -4259849, 131072, 0, -4390920, 131072, 0, -4325384, 131072, 0, -4259848, 131072, 0, -4390919, 131072, 0, -4325383, 131072, 0, -4259847, 131072, 0, -3801095, 196608, 2, -3735559, 131072, 0, -3670023, 131072, 0, -3604487, 131072, 0, -3538951, 131072, 0, -3473415, 131072, 0, -3407879, 131072, 0, -3342343, 131072, 0, -3276807, 131072, 0, -3211271, 131072, 0, -3145735, 131072, 0, -3080199, 131072, 0, -4390918, 131072, 0, -4325382, 131072, 0, -4259846, 131072, 0, -3801094, 196608, 2, -3735558, 131072, 0, -3670022, 131072, 0, -3604486, 131072, 0, -3538950, 131072, 0, -3473414, 131072, 0, -3407878, 131072, 0, -3342342, 131072, 0, -3276806, 131072, 0, -3211270, 131072, 0, -3145734, 131072, 0, -3080198, 131072, 0, -4390917, 131072, 0, -4325381, 131072, 0, -4259845, 131072, 0, -3801093, 196608, 2, -3735557, 131072, 0, -3670021, 131072, 0, -3604485, 131072, 0, -3538949, 131072, 0, -3473413, 131072, 0, -3407877, 131072, 0, -3342341, 131072, 0, -3276805, 131072, 0, -3211269, 131072, 0, -3145733, 131072, 0, -3080197, 131072, 0, -4390916, 131072, 0, -4325380, 131072, 0, -4259844, 131072, 0, -3801092, 196608, 2, -3735556, 131072, 0, -3670020, 131072, 0, -3604484, 131072, 0, -3538948, 131072, 0, -3473412, 131072, 0, -3407876, 131072, 0, -3342340, 131072, 0, -3276804, 131072, 0, -3211268, 131072, 0, -3145732, 131072, 0, -3080196, 131072, 0, -4390915, 131072, 0, -4325379, 131072, 0, -4259843, 131072, 0, -3801091, 196608, 2, -3735555, 131072, 0, -3670019, 131072, 0, -3604483, 131072, 0, -3538947, 131072, 0, -3473411, 131072, 0, -3407875, 131072, 0, -3342339, 131072, 0, -3276803, 131072, 0, -3211267, 131072, 0, -3145731, 131072, 0, -3080195, 131072, 0, -4390914, 131072, 0, -4325378, 131072, 0, -4259842, 131072, 0, -3801090, 196608, 2, -3735554, 131072, 0, -3670018, 131072, 0, -3604482, 131072, 0, -3538946, 131072, 0, -3473410, 131072, 0, -3407874, 131072, 0, -3342338, 131072, 0, -3276802, 131072, 0, -3211266, 131072, 0, -3145730, 131072, 0, -3080194, 131072, 0, -4390913, 131072, 0, -4325377, 131072, 0, -4259841, 131072, 0, -3801089, 196608, 2, -3735553, 131072, 0, -3670017, 131072, 0, -3604481, 131072, 0, -3538945, 131072, 0, -3473409, 131072, 0, -3407873, 131072, 0, -3342337, 131072, 0, -3276801, 131072, 0, -3211265, 131072, 0, -3145729, 131072, 0, -3080193, 131072, 0, -4456448, 131072, 0, -4390912, 131072, 0, -4325376, 131072, 0, -3866624, 196608, 2, -3801088, 131072, 0, -3735552, 131072, 0, -3670016, 131072, 0, -3604480, 131072, 0, -3538944, 131072, 0, -3473408, 131072, 0, -3407872, 131072, 0, -3342336, 131072, 0, -3276800, 131072, 0, -3211264, 131072, 0, -3145728, 131072, 0, -4456447, 131072, 0, -4390911, 131072, 0, -4325375, 131072, 0, -3866623, 196608, 2, -3801087, 131072, 0, -3735551, 131072, 0, -3670015, 131072, 0, -3604479, 131072, 0, -3538943, 131072, 0, -3473407, 131072, 0, -3407871, 131072, 0, -3342335, 131072, 0, -3276799, 131072, 0, -3211263, 131072, 0, -3145727, 131072, 0, -4456446, 131072, 0, -4390910, 131072, 0, -4325374, 131072, 0, -3866622, 196608, 2, -3801086, 131072, 0, -3735550, 131072, 0, -3670014, 131072, 0, -3604478, 131072, 0, -3538942, 131072, 0, -3473406, 131072, 0, -3407870, 131072, 0, -3342334, 131072, 0, -3276798, 131072, 0, -3211262, 131072, 0, -3145726, 131072, 0, -3014663, 131072, 0, -2949127, 131072, 0, -2555911, 131072, 0, -2490375, 131072, 0, -2424839, 131072, 0, -2359303, 131072, 0, -2293767, 131072, 0, -2228231, 131072, 0, -2162695, 131072, 0, -2097159, 131072, 0, -2031623, 131072, 0, -1966087, 131072, 0, -1900551, 131072, 0, -3014662, 131072, 0, -2949126, 131072, 0, -2555910, 131072, 0, -2490374, 131072, 0, -2424838, 131072, 0, -2359302, 131072, 0, -2293766, 131072, 0, -2228230, 131072, 0, -2162694, 131072, 0, -2097158, 131072, 0, -2031622, 131072, 0, -1966086, 131072, 0, -1900550, 131072, 0, -3014661, 131072, 0, -2949125, 131072, 0, -2555909, 131072, 0, -2490373, 131072, 0, -2424837, 131072, 0, -2359301, 131072, 0, -2293765, 131072, 0, -2228229, 131072, 0, -2162693, 131072, 0, -2097157, 131072, 0, -2031621, 131072, 0, -1966085, 131072, 0, -1900549, 131072, 0, -3014660, 131072, 0, -2949124, 131072, 0, -2883588, 131072, 0, -2555908, 131072, 0, -2490372, 131072, 0, -2424836, 131072, 0, -2359300, 131072, 0, -2293764, 131072, 0, -2228228, 131072, 0, -2162692, 131072, 0, -2097156, 131072, 0, -2031620, 131072, 0, -1966084, 131072, 0, -1900548, 131072, 0, -3014659, 131072, 0, -2949123, 131072, 0, -2883587, 131072, 0, -2555907, 131072, 0, -2490371, 131072, 0, -2424835, 131072, 0, -2359299, 131072, 0, -2293763, 131072, 0, -2228227, 131072, 0, -2162691, 131072, 0, -2097155, 131072, 0, -2031619, 131072, 0, -1966083, 131072, 0, -1900547, 131072, 0, -3014658, 131072, 0, -2949122, 131072, 0, -2883586, 131072, 0, -2555906, 131072, 0, -2490370, 131072, 0, -2424834, 131072, 0, -2359298, 131072, 0, -2293762, 131072, 0, -2228226, 131072, 0, -2162690, 131072, 0, -2097154, 131072, 0, -2031618, 131072, 0, -1966082, 131072, 0, -1900546, 131072, 0, -3014657, 131072, 0, -2949121, 131072, 0, -2883585, 131072, 0, -2555905, 131072, 0, -2490369, 131072, 0, -2424833, 131072, 0, -2359297, 131072, 0, -2293761, 131072, 0, -2228225, 131072, 0, -2162689, 131072, 0, -2097153, 131072, 0, -2031617, 131072, 0, -1966081, 131072, 0, -1900545, 131072, 0, -3080192, 131072, 0, -3014656, 131072, 0, -2949120, 131072, 0, -2621440, 131072, 0, -2555904, 131072, 0, -2490368, 131072, 0, -2424832, 131072, 0, -2359296, 131072, 0, -2293760, 131072, 0, -2228224, 131072, 0, -2162688, 131072, 0, -2097152, 131072, 0, -2031616, 131072, 0, -1966080, 131072, 0, -3080191, 131072, 0, -3014655, 131072, 0, -2949119, 131072, 0, -2621439, 131072, 0, -2555903, 131072, 0, -2490367, 131072, 0, -2424831, 131072, 0, -2359295, 131072, 0, -2293759, 131072, 0, -2228223, 131072, 0, -2162687, 131072, 0, -2097151, 131072, 0, -2031615, 131072, 0, -1966079, 131072, 0, -3080190, 131072, 0, -3014654, 131072, 0, -2949118, 131072, 0, -2621438, 131072, 0, -2555902, 131072, 0, -2490366, 131072, 0, -2424830, 131072, 0, -2359294, 131072, 0, -2293758, 131072, 0, -2228222, 131072, 0, -2162686, 131072, 0, -2097150, 131072, 0, -2031614, 131072, 0, -1966078, 131072, 0, -1835015, 131072, 0, -1769479, 131072, 0, -1703943, 131072, 0, -1638407, 131072, 0, -1572871, 131072, 0, -1507335, 131072, 0, -1441799, 131072, 0, -1835014, 131072, 0, -1769478, 131072, 0, -1703942, 131072, 0, -1638406, 131072, 0, -1572870, 131072, 0, -1507334, 131072, 0, -1441798, 131072, 0, -1835013, 131072, 0, -1769477, 131072, 0, -1703941, 131072, 0, -1638405, 131072, 0, -1572869, 131072, 0, -1507333, 131072, 0, -1441797, 131072, 0, -1835012, 131072, 0, -1769476, 131072, 0, -1703940, 131072, 0, -1638404, 131072, 0, -1572868, 131072, 0, -1507332, 131072, 0, -1441796, 131072, 0, -1835011, 131072, 0, -1769475, 131072, 0, -1703939, 131072, 0, -1638403, 131072, 0, -1572867, 131072, 0, -1507331, 131072, 0, -1441795, 131072, 0, -1835010, 131072, 0, -1769474, 131072, 0, -1703938, 131072, 0, -1638402, 131072, 0, -1572866, 131072, 0, -1507330, 131072, 0, -1441794, 131072, 0, -1835009, 131072, 0, -1769473, 131072, 0, -1703937, 131072, 0, -1638401, 131072, 0, -1572865, 131072, 0, -1507329, 131072, 0, -1441793, 131072, 0, -1900544, 131072, 0, -1835008, 131072, 0, -1769472, 131072, 0, -1703936, 131072, 0, -1638400, 131072, 0, -1572864, 131072, 0, -1507328, 131072, 0, -1900543, 131072, 0, -1835007, 131072, 0, -1769471, 131072, 0, -1703935, 131072, 0, -1638399, 131072, 0, -1572863, 131072, 0, -1507327, 131072, 0, -1900542, 131072, 0, -1835006, 131072, 0, -1769470, 131072, 0, -1703934, 131072, 0, -1638398, 131072, 0, -1572862, 131072, 0, -1507326, 131072, 0, -2883614, 131072, 0, -2883589, 131072, 0, -2883590, 131072, 0, -2883591, 131072, 0, -2883592, 131072, 0, -2883593, 131072, 0, -2883594, 131072, 0, -2883595, 131072, 0, -2883596, 131072, 0, -2883597, 131072, 0, -2883598, 131072, 0, -2883599, 131072, 0, -2883600, 131072, 0, -2883601, 131072, 0, -2883602, 131072, 0, -2883603, 131072, 0, -2883604, 131072, 0, -2883605, 131072, 0, -2883606, 131072, 0, -2883607, 131072, 0, -2883608, 131072, 0, -2883609, 131072, 0, -2883610, 131072, 0, -2883611, 131072, 0, -2883612, 131072, 0, -2883613, 131072, 0, -2818078, 131072, 0, -2752542, 131072, 0, -2687006, 131072, 0, -2621470, 131072, 0, -2555934, 131072, 0, -2490398, 131072, 0, -2424862, 131072, 0, -2359326, 131072, 0, -2293790, 131072, 0, -2228254, 131072, 0, -2162718, 131072, 0, -2097182, 131072, 0, -2031646, 131072, 0, -1966110, 131072, 0, -1900574, 131072, 0, -1835038, 131072, 0, -1769502, 131072, 0, -1703966, 131072, 0, -1638430, 131072, 0, -1572894, 131072, 0, -1507358, 131072, 0, -1441822, 131072, 0, -3735588, 196608, 3, -4259866, 131072, 0, -4259865, 131072, 0, -4259864, 131072, 0, -4259863, 131072, 0, -4259862, 131072, 0, -4325398, 131072, 0, -4390934, 131072, 0, -4390935, 131072, 0, -4390936, 131072, 0, -4390937, 131072, 0, -4390938, 131072, 0, -4325402, 131072, 0, -4325401, 131072, 0, -4325400, 131072, 0, -4325399, 131072, 0, -4390939, 131072, 0, -4390940, 131072, 0, -4390941, 131072, 0, -4390942, 131072, 0, -4390943, 131072, 0, -4390944, 131072, 0, -4390945, 131072, 0, -4390946, 131072, 0, -4390947, 131072, 0, -4390948, 131072, 0, -4390949, 131072, 0, -4390950, 131072, 0, -4390951, 131072, 0, -4390952, 131072, 0, -4390953, 131072, 0, -4390954, 131072, 0, -4390955, 131072, 0, -4390956, 131072, 0, -4390957, 131072, 0, -4390958, 131072, 0, -4390959, 131072, 0, -4390960, 131072, 0, -4390961, 131072, 0, -4390962, 131072, 0, -4390963, 131072, 0, -4390964, 131072, 0, -4390965, 131072, 0, -4390966, 131072, 0, -4390967, 131072, 0, -4390968, 131072, 0, -4390969, 131072, 0, -4390970, 131072, 0, -4390971, 131072, 0, -4390972, 131072, 0, -4390973, 131072, 0, -4390974, 131072, 0, -4390975, 131072, 0, -4390976, 131072, 0, -4390977, 131072, 0, -4390978, 131072, 0, -2621490, 0, 3, -2621489, 0, 3, -2621488, 0, 3, -2621487, 0, 3, -3145756, 0, 3, -3145757, 0, 3, -3145758, 0, 3, -3145759, 0, 3, -3145760, 0, 3)
layer_1/name = "Gameobjects"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 1
layer_1/tile_data = PackedInt32Array()

[node name="PlatformsList" type="Node" parent="."]

[node name="NormalPlatform" parent="PlatformsList" instance=ExtResource("2_bkqre")]
position = Vector2(33, -47)
_collisionSize = Vector2(60, 8)

[node name="MovingPlatform" parent="PlatformsList" instance=ExtResource("3_sj8q7")]
position = Vector2(-63, -26)

[node name="Sprite" parent="PlatformsList/MovingPlatform" index="0"]
texture = SubResource("GradientTexture2D_tqo22")

[node name="AnimationPlayer" parent="PlatformsList/MovingPlatform" index="2"]
autoplay = "Move"
libraries = {
"": SubResource("AnimationLibrary_wdbp8")
}

[node name="MovingPlatform2" parent="PlatformsList" instance=ExtResource("3_sj8q7")]
position = Vector2(40, -101)

[node name="Sprite" parent="PlatformsList/MovingPlatform2" index="0"]
texture = SubResource("GradientTexture2D_5afbk")

[node name="AnimationPlayer" parent="PlatformsList/MovingPlatform2" index="2"]
autoplay = "Move"
libraries = {
"": SubResource("AnimationLibrary_mpaml")
}

[node name="GameObjectsList" type="Node" parent="."]

[node name="Box" parent="GameObjectsList" instance=ExtResource("5_wi1df")]
position = Vector2(-349, -788)
physics_material_override = SubResource("PhysicsMaterial_ypp4y")
continuous_cd = 2
max_contacts_reported = 0

[node name="TeleportCooldown" parent="GameObjectsList/Box" index="1"]
process_callback = 0

[node name="Sprite" parent="GameObjectsList/Box" index="2"]
texture = SubResource("GradientTexture2D_dkal7")

[node name="GravityfieldList" type="Node" parent="."]

[node name="Gravityfield_Normal" parent="GravityfieldList" instance=ExtResource("6_ot4hf")]
position = Vector2(-302, -145)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Normal" index="0"]
shape = SubResource("RectangleShape2D_vpx1o")

[node name="GravityDirection" parent="GravityfieldList/Gravityfield_Normal/GravityfieldCollider" index="0"]
position = Vector2(0, -47)

[node name="Sprite" parent="GravityfieldList/Gravityfield_Normal/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_w4st0")

[node name="Gravityfield_Time" parent="GravityfieldList" instance=ExtResource("7_vr5mk")]
position = Vector2(-153, -147)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Time" index="0"]
shape = SubResource("RectangleShape2D_qt8sq")

[node name="GravityDirection" parent="GravityfieldList/Gravityfield_Time/GravityfieldCollider" index="0"]
position = Vector2(14, -19)

[node name="Sprite" parent="GravityfieldList/Gravityfield_Time/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_cm6gq")

[node name="Gravityfield_Toggle" parent="GravityfieldList" instance=ExtResource("8_i08wq")]
position = Vector2(174, -108)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Toggle/Gravityfield" index="0"]
shape = SubResource("RectangleShape2D_0wfdn")
disabled = true

[node name="Sprite" parent="GravityfieldList/Gravityfield_Toggle/Gravityfield" index="1"]
material = SubResource("ShaderMaterial_ya3tf")

[node name="Switch" parent="GravityfieldList/Gravityfield_Toggle" index="1"]
position = Vector2(-44, 17)

[node name="Gravityfield_Normal2" parent="GravityfieldList" instance=ExtResource("6_ot4hf")]
position = Vector2(-566, -703)
_gravityfieldSize = Vector2(75, 125)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Normal2" index="0"]
shape = SubResource("RectangleShape2D_j5sff")

[node name="GravityDirection" parent="GravityfieldList/Gravityfield_Normal2/GravityfieldCollider" index="0"]
position = Vector2(19, -48)

[node name="Sprite" parent="GravityfieldList/Gravityfield_Normal2/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_sxcf1")
scale = Vector2(75, 125)

[node name="Gravityfield_Toggle2" parent="GravityfieldList" instance=ExtResource("8_i08wq")]
position = Vector2(-376, -856)
_gravityfieldSize = Vector2(50, 150)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Toggle2/Gravityfield" index="0"]
shape = SubResource("RectangleShape2D_mcp58")

[node name="Sprite" parent="GravityfieldList/Gravityfield_Toggle2/Gravityfield" index="1"]
material = SubResource("ShaderMaterial_esso6")
scale = Vector2(50, 150)

[node name="Switch" parent="GravityfieldList/Gravityfield_Toggle2" index="1"]
position = Vector2(109, 80)

[node name="SwitchCollider" parent="GravityfieldList/Gravityfield_Toggle2/Switch" index="0"]
position = Vector2(0, 5.99997)

[node name="Gravityfield_Normal3" parent="GravityfieldList" instance=ExtResource("6_ot4hf")]
position = Vector2(-432, -527)
_gravityfieldSize = Vector2(64, 352)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Normal3" index="0"]
shape = SubResource("RectangleShape2D_6ii74")

[node name="GravityDirection" parent="GravityfieldList/Gravityfield_Normal3/GravityfieldCollider" index="0"]
position = Vector2(0, 20)

[node name="Sprite" parent="GravityfieldList/Gravityfield_Normal3/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_nhevw")
scale = Vector2(64, 352)

[node name="Gravityfield_Normal4" parent="GravityfieldList" instance=ExtResource("6_ot4hf")]
position = Vector2(-175, -672)
_gravityfieldSize = Vector2(450, 64)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Normal4" index="0"]
shape = SubResource("RectangleShape2D_0sfou")

[node name="GravityDirection" parent="GravityfieldList/Gravityfield_Normal4/GravityfieldCollider" index="0"]
position = Vector2(-41, 0)

[node name="Sprite" parent="GravityfieldList/Gravityfield_Normal4/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_034wp")
scale = Vector2(450, 64)

[node name="Gravityfield_Time2" parent="GravityfieldList" instance=ExtResource("7_vr5mk")]
position = Vector2(-760, -840)
_gravityfieldSize = Vector2(48, 144)

[node name="GravityfieldCollider" parent="GravityfieldList/Gravityfield_Time2" index="0"]
shape = SubResource("RectangleShape2D_6apcr")

[node name="Sprite" parent="GravityfieldList/Gravityfield_Time2/GravityfieldCollider" index="1"]
material = SubResource("ShaderMaterial_gi30v")
scale = Vector2(48, 144)

[node name="JumpPadsList" type="Node" parent="."]

[node name="JumpPad" parent="JumpPadsList" instance=ExtResource("9_3ixdi")]
position = Vector2(-99, -163)
_objectCollisionSize = Vector2(30, 8)
_strength = 600.0

[node name="Sprite" parent="JumpPadsList/JumpPad" index="0"]
texture = SubResource("GradientTexture2D_felqj")

[node name="PortalsList" type="Node" parent="."]

[node name="Portals" parent="PortalsList" instance=ExtResource("10_xwke7")]
position = Vector2(-272, 28)

[node name="ImpulseDirection" parent="PortalsList/Portals/Portal1" index="1"]
position = Vector2(-44, -70)

[node name="CheckpointsList" type="Node" parent="."]

[node name="Checkpoint" parent="CheckpointsList" instance=ExtResource("11_l85ei")]
position = Vector2(37, 112)

[node name="Checkpoint2" parent="CheckpointsList" instance=ExtResource("11_l85ei")]
position = Vector2(-667, -640)

[node name="Player" parent="." instance=ExtResource("11_xf5fx")]
position = Vector2(-477, -798)

[node name="HFlowContainer" parent="Player" index="2"]
offset_left = -360.0
offset_top = -189.0
offset_right = -257.0
offset_bottom = -73.0

[node name="Label" parent="Player" index="4"]
visible = false

[node name="Camera2D" parent="Player" index="8"]
zoom = Vector2(1.5, 1.5)

[node name="Sprite2D" parent="Player" index="9"]
scale = Vector2(0.461, 0.461)
texture = ExtResource("14_kjbvf")

[node name="Miscellaneous" type="Node" parent="."]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_knb4o")

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = -1

[node name="Sprite2D" type="Sprite2D" parent="CanvasLayer"]
material = SubResource("ShaderMaterial_xt6qb")
position = Vector2(-442, -156)
scale = Vector2(10000, 10000)
texture = SubResource("CanvasTexture_ry0wi")

[node name="SpikesList" type="Node" parent="."]

[node name="Spikes" parent="SpikesList" instance=ExtResource("16_b88yk")]
position = Vector2(-814, -644)

[node name="IngameUI" parent="." instance=ExtResource("15_limdq")]
metadata/_edit_use_anchors_ = true

[node name="LevelManager" parent="." node_paths=PackedStringArray("levelTimer") instance=ExtResource("1_ivd61")]
levelTimer = NodePath("../IngameUI/LevelTimer")

[editable path="PlatformsList/MovingPlatform"]
[editable path="PlatformsList/MovingPlatform2"]
[editable path="GameObjectsList/Box"]
[editable path="GravityfieldList/Gravityfield_Normal"]
[editable path="GravityfieldList/Gravityfield_Time"]
[editable path="GravityfieldList/Gravityfield_Toggle"]
[editable path="GravityfieldList/Gravityfield_Normal2"]
[editable path="GravityfieldList/Gravityfield_Toggle2"]
[editable path="GravityfieldList/Gravityfield_Normal3"]
[editable path="GravityfieldList/Gravityfield_Normal4"]
[editable path="GravityfieldList/Gravityfield_Time2"]
[editable path="JumpPadsList/JumpPad"]
[editable path="PortalsList/Portals"]
[editable path="Player"]
[editable path="SpikesList/Spikes"]
[editable path="IngameUI"]
